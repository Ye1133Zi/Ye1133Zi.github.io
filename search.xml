<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>MarkDown语法学习</title>
    <url>/2021/12/16/MarkDown%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p><strong>通过hexo和gihub搭建的博客文章可以采用.md（Markdown）文件，我决定以边学边写的方式，通过此篇博客进行Markdown语法学习。</strong>  </p>
<span id="more"></span>
<h2 id="一，什么是MarkDown？"><a href="#一，什么是MarkDown？" class="headerlink" title="一，什么是MarkDown？"></a>一，什么是MarkDown？</h2><p>markdown是一种轻量化、纯文本的网页内容编辑格式，简单易学，可以与HTML混编，被简书、维基、github等采用。  </p>
<blockquote>
<p>Markdown编辑器<br>本人选择Visual Studio Code（官网免费），安装Markdown预览插件。</p>
</blockquote>
<h2 id="二，标题语法"><a href="#二，标题语法" class="headerlink" title="二，标题语法"></a>二，标题语法</h2><p>通过添加#号进行标题分级<br>示例： 原markdown文件与实际效果对比<br># 标题1   </p>
<h1 id="标题1"><a href="#标题1" class="headerlink" title="标题1"></a>标题1</h1><p>## 标题2</p>
<h2 id="标题2"><a href="#标题2" class="headerlink" title="标题2"></a>标题2</h2><p>### 标题3</p>
<h3 id="标题3"><a href="#标题3" class="headerlink" title="标题3"></a>标题3</h3><p>#### 标题4</p>
<h4 id="标题4"><a href="#标题4" class="headerlink" title="标题4"></a>标题4</h4><p>##### 标题5</p>
<h5 id="标题5"><a href="#标题5" class="headerlink" title="标题5"></a>标题5</h5><p>###### 标题6</p>
<h6 id="标题6"><a href="#标题6" class="headerlink" title="标题6"></a>标题6</h6><p> *注：记得用一个空格在 # 和标题之间进行分隔。</p>
<h2 id="三，段落和换行语法"><a href="#三，段落和换行语法" class="headerlink" title="三，段落和换行语法"></a>三，段落和换行语法</h2><p>  用两个或多个空格进行换行。用空白一行进行分段<br>  不过学到目前还不能段落缩进（开头空两格）</p>
<h2 id="四，强调语法"><a href="#四，强调语法" class="headerlink" title="四，强调语法"></a>四，强调语法</h2><ul>
<li><h3 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h3></li>
</ul>
<p>要加粗文本，请在单词或短语的前后各添加两个星号或下划线。<br>如:<br>**你好 ** –&gt; <strong>你好</strong><br>__你好__  –&gt;  <strong>你好</strong></p>
<ul>
<li><h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3></li>
</ul>
<p>单对星号或下划线包裹为斜体<br>_ 吃了吗您？_ –&gt;<em>吃了吗您？</em></p>
<ul>
<li><h3 id="综合使用"><a href="#综合使用" class="headerlink" title="综合使用"></a>综合使用</h3></li>
</ul>
<p>粗体和斜体双重使用，用三对星号或下划线包裹</p>
<ul>
<li><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3></li>
</ul>
<p>可以通过在单词中心放置一条水平线来删除单词。结果看起来像这样。此功能使您可以指示某些单词是一个错误，要从文档中删除。若要删除单词，请在单词前后使用两个波浪号~~<br><del>删掉，删掉</del></p>
<h2 id="五，引用语法"><a href="#五，引用语法" class="headerlink" title="五，引用语法"></a>五，引用语法</h2><p>可添加&gt;至段落前表示引用，如</p>
<blockquote>
<p>这不是厕所，这是洗手间  </p>
</blockquote>
<p>可用&gt;&gt;进行嵌套</p>
<blockquote>
<p>xmz说：  </p>
<blockquote>
<p>这不是厕所，这是洗手间</p>
</blockquote>
</blockquote>
<p>其他还有:<br>1.&gt;## abc</p>
<blockquote>
<h2 id="abc"><a href="#abc" class="headerlink" title="abc"></a>abc</h2></blockquote>
<p>2.&gt; - efg</p>
<blockquote>
<ul>
<li>efg</li>
</ul>
</blockquote>
<h2 id="六-列表语法"><a href="#六-列表语法" class="headerlink" title="六,列表语法"></a>六,列表语法</h2><ul>
<li><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3></li>
</ul>
<p>请在每个列表项前添加数字并紧跟一个英文句点。数字不必按数学顺序排列，但是列表应当以数字 1 起始，记得空格。  </p>
<ol>
<li>我先学C语言</li>
<li>再学高数</li>
<li>要不先打会儿王者荣耀吧</li>
<li>我靠，打到十一点了，还学什么习呀  </li>
</ol>
<h2 id="七，代码语法"><a href="#七，代码语法" class="headerlink" title="七，代码语法"></a>七，代码语法</h2><p>将其包裹在` (键盘的Esc下面那个）中<br>如 <code>#include&lt;stdio.h&gt;</code><br>或者也可以使用每一行缩进至少四个空格或一个制表符创建代码块    </p>
<pre><code>int main()&#123;
  int i=1;
  int sum=0;
  sum =(i++) + (++i);
  printf(&quot;%d&quot;,sum); 
  return =0;
&#125; 
</code></pre>
<h2 id="八，分隔线"><a href="#八，分隔线" class="headerlink" title="八，分隔线"></a>八，分隔线</h2><p>要创建分隔线，请在单独一行上使用三个或多个星号 (***)、破折号 (—) 或下划线 (___) ，并且不能包含其他内容。</p>
<hr>
<h2 id="九，链接与插入语法"><a href="#九，链接与插入语法" class="headerlink" title="九，链接与插入语法"></a>九，链接与插入语法</h2><ul>
<li><h3 id="链接网址"><a href="#链接网址" class="headerlink" title="链接网址"></a>链接网址</h3></li>
</ul>
<p>链接文本放在中括号内，链接地址放在后面的括号中，链接title可选。<br>超链接Markdown语法代码：[超链接显示名](超链接地址 “超链接title”)<br>效果：<a href="http://localhost:4000/" title="我的博客">超链接显示名</a>  </p>
<h4 id="注：记得用英文括号"><a href="#注：记得用英文括号" class="headerlink" title="注：记得用英文括号"></a>注：记得用英文括号</h4><ul>
<li><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3></li>
</ul>
<p>同类似于插入网址链接，写成![图片alt](图片链接 “图片title”)，但是，如果是使用hexo，需要进行一些改变；<br>可参考<a href="https://zhuanlan.zhihu.com/p/265077468">知乎hexo博客如何插入图片</a><br>调整后效果如下：<br><img src="/%E9%BE%99%E7%8C%AB.jpg" alt="叶子最喜欢的龙猫">    </p>
<h2 id="十，转义字符语法"><a href="#十，转义字符语法" class="headerlink" title="十，转义字符语法"></a>十，转义字符语法</h2><p>可用反斜杠进行转义字符的输出，</p>
<h2 id="十一，内嵌html标签"><a href="#十一，内嵌html标签" class="headerlink" title="十一，内嵌html标签"></a>十一，内嵌html标签</h2><p>于 Markdown 涵盖范围之外的标签，都可以直接在文件里面用 HTML 本身。如需使用 HTML，不需要额外标注这是 HTML 或是 Markdown，只需 HTML 标签添加到 Markdown 文本中即可。</p>
<h2 id="十二，表格语法"><a href="#十二，表格语法" class="headerlink" title="十二，表格语法"></a>十二，表格语法</h2><p>使用三个或多个连字符（—）创建每列的标题，并使用管道（|）分隔每列。您可以选择在表的任一端添加管道。   </p>
<pre><code>| Syntax      | Description |  
| ----------- | ----------- |  
| Header      | Title       |  
| Paragraph   | Text        |   
</code></pre>
<table>
<thead>
<tr>
<th>Syntax</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Header</td>
<td>Title</td>
</tr>
<tr>
<td>Paragraph</td>
<td>Text</td>
</tr>
</tbody></table>
<p>Tip: 使用连字符和管道创建表可能很麻烦。为了加快该过程，请尝试使用<a href="https://www.tablesgenerator.com/markdown_tables">Markdown Tables Generator</a>。使用图形界面构建表，然后将生成的Markdown格式的文本复制到文件中。</p>
<h2 id="十二，代码高亮"><a href="#十二，代码高亮" class="headerlink" title="十二，代码高亮"></a>十二，代码高亮</h2><p>许多Markdown处理器都支持受围栏代码块的语法突出显示。使用此功能，您可以为编写代码的任何语言添加颜色突出显示。要添加语法突出显示，请在受防护的代码块之前的反引号旁边指定一种语言  </p>
<pre><code class="json">&#123;
  &quot;firstName&quot;: &quot;John&quot;,
  &quot;lastName&quot;: &quot;Smith&quot;,
  &quot;age&quot;: 25
&#125;
</code></pre>
<h2 id="十三，任务列表语法"><a href="#十三，任务列表语法" class="headerlink" title="十三，任务列表语法"></a>十三，任务列表语法</h2><p>任务列表使您可以创建带有复选框的项目列表。在支持任务列表的Markdown应用程序中，复选框将显示在内容旁边。要创建任务列表，请在任务列表项之前添加破折号-和方括号[ ]，并在[ ]前面加上空格。要选择一个复选框，请在方括号[x]之间添加 x 。</p>
<ul>
<li><input checked="" disabled="" type="checkbox"> 吃饭</li>
<li><input checked="" disabled="" type="checkbox"> 睡觉</li>
<li><input disabled="" type="checkbox"> 学习  <h2 id="注：本文参考：https-markdown-com-cn-basic-syntax-写成"><a href="#注：本文参考：https-markdown-com-cn-basic-syntax-写成" class="headerlink" title="注：本文参考：https://markdown.com.cn/basic-syntax/写成"></a>注：本文参考：<a href="https://markdown.com.cn/basic-syntax/%E5%86%99%E6%88%90">https://markdown.com.cn/basic-syntax/写成</a></h2></li>
</ul>
]]></content>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>Python学习</title>
    <url>/2022/01/02/Python%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>人生苦短，我学python</p>
<span id="more"></span>
<h2 id="海龟制图"><a href="#海龟制图" class="headerlink" title="海龟制图"></a>海龟制图</h2><p><code>import turtle</code> 引入<br><code>turtle.write(&quot;嘿嘿嘿&quot;)</code> 输入字符串<br><code>turtle.showturtle()</code>   显示字符串<br><code>turtle.forward(300)</code> 前进<br><code>turtle.goto（0，54）</code> 移到坐标<br><code>turtle.penup()</code>  抬笔<br><code>turtle.pendown()</code> 落笔<br><code>turtle.circle()</code> 画画<br><code>turtle.width()</code> 设置粗细<br><code>turtle.color()</code>  设置颜色  </p>
<h2 id="python与c不一样的地方"><a href="#python与c不一样的地方" class="headerlink" title="python与c不一样的地方"></a>python与c不一样的地方</h2><p>赋值<br>a,b,c = 1,2,3<br>a,b = b,a<br>// 整数除法<br>** 幂<br>divemod（）同时得到商和余数<br>round（） 四色五入<br>3&lt;4&lt;4 关系运算符可以连用  </p>
<h2 id="字符"><a href="#字符" class="headerlink" title="字符"></a>字符</h2><p>Python使用Unicode编码<br>相互转换：ord（） chr（）<br>多行注释用三个单引号或双引号<br>使用print加入,end=实现不换行<br>字符串处理(以a为示例字符串)：</p>
<pre><code>str（）
a = a.replace(原字符,替换字符)  
[start:end:step]   
a.split()  默认空格  
join（）  
in / not in

a.startwith()  
a.endwith()  
a.find()  
a.rfind()
a.count（）

a.isalnum() 是否全为字母或数字
a.isalpha() 是否全为字母（含汉字）
a.isspace() 是否为空白字符  
a.isupper()
a.islower()       

strip() 去除首尾  
lstrip（）
rstrip（）  

a.capitalize() 首字母大写  
a.title() 每个单词首字母大写  
a.upper()   所有单词大写   
a.lower()    全部小写  
a.swapcase()  大小写互换  

排版：
center()
lijust()
rjust()   

格式化： 
str.format()

io和array
import io
io.StrngIO（）
.getvalue()  
.seek() 移动指针  
.write()
</code></pre>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><pre><code>创建:
a = []
a = list(字符串或range() )
修改：
a.append()
extend()
insert()
del a[1]
pop()
remove()
index()
</code></pre>
<h2 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h2><pre><code>创建：
s = set()
s = &#123;&#125;
s.add(1)
s.remove()
遍历：
for x in s:
并集：
s1.s2
交集：
s1 &amp; s2
对称差(作并集取交集）：
s1 ^ s2
s1 - s2
</code></pre>
<h2 id="包"><a href="#包" class="headerlink" title="包"></a>包</h2><pre><code>命名： _init_.py
将模块A导入B：import A.B
(包中包可以用.from表示，如将C中的A包引入B为：import C.A.B or from C import A)
 
</code></pre>
<h2 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h2><pre><code>f = open（&quot;文件名&quot;,&quot;w/...&quot;) 
f.close
</code></pre>
<table>
<thead>
<tr>
<th>字母</th>
<th>效果</th>
</tr>
</thead>
<tbody><tr>
<td>r</td>
<td>只读方式打开</td>
</tr>
<tr>
<td>w</td>
<td>从头写入（覆盖）</td>
</tr>
<tr>
<td>a</td>
<td>从结尾写入</td>
</tr>
<tr>
<td>rb</td>
<td>二进制只读</td>
</tr>
<tr>
<td>wb</td>
<td>二进制写入</td>
</tr>
<tr>
<td>ab</td>
<td>二进制结尾写入</td>
</tr>
</tbody></table>
<h2 id="More-菜鸟笔记"><a href="#More-菜鸟笔记" class="headerlink" title="More: 菜鸟笔记"></a>More: <a href="https://www.runoob.com/python3/python3-file-methods.html">菜鸟笔记</a></h2><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>print(“www”,”baidu”,”com”,sep=”.”)</p>
]]></content>
      <tags>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>docker学习</title>
    <url>/2021/12/25/docker%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p><strong>学业指导老师让我们学习docker，写成报告作为大作业，之前自己也研究了下VMware，在上面安装了Ubuntu，正好趁此熟悉一下Linux操作系统，顺便为将来搭建服务器打基础。</strong><br> <span id="more"></span></p>
<h1 id="docker-容器"><a href="#docker-容器" class="headerlink" title="docker 容器"></a>docker 容器</h1><h2 id="服务器搭建"><a href="#服务器搭建" class="headerlink" title="服务器搭建"></a>服务器搭建</h2><p>传统服务器：  </p>
<pre><code> 宿主机： vmvare + cenntos（Ubuntu）= Linux
 物理机：  硬件 + 操作系统  
</code></pre>
<p>虚拟化服务器：   </p>
<pre><code>  物理机 + host operating sever +  hypervisor + vmware
 
</code></pre>
<h2 id="容器技术"><a href="#容器技术" class="headerlink" title="容器技术"></a>容器技术</h2><p><strong>虚拟化工具</strong>：<br>VMware &emsp; Virtua &emsp;PCVirtualbox  </p>
<ul>
<li>vmware workstation（个人学习）  </li>
<li>vmware ecxi（企业级）</li>
</ul>
<p>KVM&emsp;Docker</p>
<p><strong>Docker的组件</strong><br>镜像&emsp;存储&emsp;网络&emsp;容器<br>docker file&emsp;dockerhub  </p>
<h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><p>企业版（EE）&emsp;社区版（CE）  </p>
<h2 id="开启linux内核的流量转发"><a href="#开启linux内核的流量转发" class="headerlink" title="开启linux内核的流量转发"></a>开启linux内核的流量转发</h2><p>生成文件<br><code>cat &lt;&lt;EOF &gt; /etc/sysctl.d/docker.conf net.bridge.bridge-nf-call-ip6tables = 1 net.bridge.bridge-nf-call-iptables = 1 net.ipv4.conf.default.rp_filter = 0 net.ipv4.conf.all.rp_filter = 0 net.ipv4.ip_forward=1 EOF</code>（好像需要root身份）<br>检验<br><code>ls /etc/sysctl.d/docker.conf</code><br>加载<br><code>modprobe br_netfilter</code><br><code>sysctl -p /etc/sysctl.d/docker.conf</code><br>配置docker加速器<br><code>mkdir -p /etc/docker</code><br><code>touch /etc/docker/daemon.json</code><br><code>vim /etc/docker/daemon.json</code><br>(没有vim可以通过apt install vim<br>命令下载)<br>输入以下内容<br><code>&#123;</code><br> <code>&quot;registry-mirrors&quot; : [</code><br><code> &quot;https://8xpk5wnt.mirror.aliyuncs.com&quot;</code><br><code> ]</code><br><code>&#125;</code><br>esc ：wq退出<br>查看检验<br><code>cat /etc/docker/daemon.json</code>  </p>
<h2 id="启动docker"><a href="#启动docker" class="headerlink" title="启动docker"></a>启动docker</h2><pre><code>        systemctl daemon-reload 
        systemctl enable docker 
        systemctl restart docker  
</code></pre>
<h2 id="查看docker"><a href="#查看docker" class="headerlink" title="查看docker"></a>查看docker</h2><p><code>docker images</code><br><code>docker ps</code><br><code>docker version</code>    </p>
<h2 id="启动第一个dockers容器"><a href="#启动第一个dockers容器" class="headerlink" title="启动第一个dockers容器"></a>启动第一个dockers容器</h2><p>以nginx为例<br>搜索<br><code>docker search nginx</code><br>拉取<br><code>docker pull nginx</code><br>删除<br><code>docker images ls</code>(查找ID)<br><code>docker rmi ID</code><br>运行<br>docker run 参数   镜像的名字/id<br><code>docker run  -d（后台运行） -p 80:80（端口映射） nginx  </code><br>会返回一个容器的id<br><code>netstat -tunlp</code> 查看端口<br><code>ip -a</code>查看ip / <code>ifconfig</code><br>查看容器是否在运行<br><code>doker  ps  </code><br>停止容器<br><code>docker stop 容器id</code><br>开启<br><code>docker start 容器ip</code>  </p>
]]></content>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>html学习</title>
    <url>/2022/01/31/html%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p><strong>学习python爬虫需要html基础，而且markdown文件支持html写法，所以专门来学习一下</strong></p>
<span id="more"></span>
<p>学习参考：<a href="https://www.bilibili.com/video/BV1XJ411X7Ud?p=7&spm_id_from=pageDriver">【尚硅谷】Web前端零基础入门HTML5+CSS3基础教程丨初学者从入门到精通</a>  </p>
<p><a href="https://lilichao.com/">视频中李立超老师的博客</a></p>
<h2 id="一-注释"><a href="#一-注释" class="headerlink" title="一,注释"></a>一,注释</h2><pre><code>&lt;html&gt; 
    &lt;head&gt;
        &lt;title&gt;这是我的第一个网页&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;h1&gt;这是我的第二个网页&lt;/h1&gt;
        &lt;!--
            这是一个注释
        --&gt;
    &lt;/body&gt;
&lt;/html&gt;
 
</code></pre>
<h2 id="二，属性"><a href="#二，属性" class="headerlink" title="二，属性"></a>二，属性</h2><pre><code>&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;这是我的第二个网页&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;h1&gt;
            我想显示超大的&lt;font color=&#39;red&#39; size = 100 &gt;红字&lt;/font&gt;
        &lt;/h1&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>
<h2 id="三，网页结构"><a href="#三，网页结构" class="headerlink" title="三，网页结构"></a>三，网页结构</h2><pre><code>&lt;!doctype html&gt; 
&lt;html&gt;
    &lt;head&gt;
        &lt;!--
            可以通过meta标签设置网页中的字符集，避免乱码
        --&gt;
        &lt;meta charset=&quot;utf-8&quot;&gt;
        
        &lt;title&gt;网页结构&lt;/title&gt;    
    &lt;head&gt;
    &lt;body&gt;
    &lt;!--
        迭代
            网页版本
                HTML4
                XHTML2.0
                HTML5
                ....
            文档声明(doctype)
                -当前网页版本
                -html5的文档声明
                &lt;!doctype html&gt; 
    --&gt;
    &lt;body&gt;
&lt;/html&gt;
</code></pre>
<h2 id="四，vscode"><a href="#四，vscode" class="headerlink" title="四，vscode"></a>四，vscode</h2><p>用！ + Tab可以直接生成网页架构<br>用ctrl + /添加注释<br>用ctrl + 回车可以使光标换行<br>用 F2 快速改名<br>用alt + shift + 下或者上 可以往上下复制<br>用 lorem 自动生成英文文本<br>用 ctrl + / 进行快速注释<br>用ul&gt;li + tab 快速创建无序列表格式、<br>用div.box2 快速创建class为box2的div元素<br>用alt + shift + F 格式化（自动排版）</p>
<h2 id="五-，转义字符"><a href="#五-，转义字符" class="headerlink" title="五 ，转义字符"></a>五 ，转义字符</h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web/HTML_basics">MDN官网</a></p>
<p><a href="https://www.runoob.com/html/html-tutorial.html">菜鸟教程</a></p>
<h2 id="六，meta"><a href="#六，meta" class="headerlink" title="六，meta"></a>六，meta</h2><p>charset: 字符集<br>name: 数据名称(keywords,description,http-equiv-“reflesh-)<br>content: 数据内容</p>
<h2 id="七-语义化标签"><a href="#七-语义化标签" class="headerlink" title="七,语义化标签"></a>七,语义化标签</h2><h3 id="注意点："><a href="#注意点：" class="headerlink" title="注意点："></a>注意点：</h3><ol>
<li>一般情况下网页下只有一个&lt;h1&gt;,&lt;h4&gt;-&lt;h6&gt;很少用</li>
<li>在页面中独占一行的元素叫做快元素（block element），反之称为行内元素</li>
</ol>
<h3 id="行标签："><a href="#行标签：" class="headerlink" title="行标签："></a>行标签：</h3><p>1.&lt;p&gt;标签中不能放块标签<br>2. &lt;hgroup&gt;将标题分组<br>3. &lt;em&gt;表示语音语调的加重<br>4. &lt;strong&gt;表示强调<br>5. &lt;blockquote&gt;表示长引用，&lt;q&gt;表示短引用<br>6. &lt;br&gt;换行<br>7. &lt;span&gt;  在网页中选中文字 </p>
<h3 id="块标签"><a href="#块标签" class="headerlink" title="块标签:"></a>块标签:</h3><ol>
<li>&lt;header&gt;,&lt;main&gt;,&lt;footer&gt;</li>
<li>&lt;niv&gt;导航 </li>
<li>&lt;aside&gt;和主体相关的其他内容</li>
<li>&lt;article&gt;文章</li>
<li>&lt;section&gt;表示独立的区块</li>
<li>&lt;div&gt;一个区块</li>
</ol>
<h3 id="列表"><a href="#列表" class="headerlink" title="列表:"></a>列表:</h3><p>列表分类：</p>
<pre><code>1.有序列表
2.无序列表
3.定义列表
</code></pre>
<h4 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h4><p>使用&lt;ol&gt;标签创建有序列表<br>使用&lt;ul&gt;标签创建无序列表<br>使用&lt;li&gt;表示列表项<br>使用&lt;dl&gt;标签创建定义列表<br>使用&lt;dt&gt;表示定义内容<br>使用&lt;dd&gt;进行内容解释</p>
<pre><code>&lt;ul&gt;
    &lt;li&gt;第一个小目标&lt;/li&gt;
    &lt;li&gt;第二个小目标&lt;/li&gt;
    &lt;li&gt;第三个小目标&lt;/li&gt;
&lt;/ul&gt;
</code></pre>
<h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><p>使用&lt;a&gt;标签定义超链接<br>使用href属性给出链接地址<br>如</p>
<pre><code> &lt;a href=&quot;http://ye1133zi.github.io&quot;&gt;叶子的博客&lt;/a&gt;
</code></pre>
<p>相对路径<br>./ 或 ../(类linux)</p>
<p>使用target属性（_self,_blank)选择新页面or当前页面打开超链接</p>
<h4 id="回到顶部"><a href="#回到顶部" class="headerlink" title="回到顶部"></a>回到顶部</h4><pre><code>&lt;a href=&quot;#&quot;&gt;回到顶部&lt;/a&gt;
</code></pre>
<h4 id="标记"><a href="#标记" class="headerlink" title="标记"></a>标记</h4><p>使用id属性（锚点）标记标签，从而实现</p>
<pre><code>&lt;a href=&quot;#bottom&quot;&gt;到底部&lt;/a&gt;
...
&lt;a id = &quot;bottom&quot;&gt;底部&lt;/a&gt;
</code></pre>
<h4 id="无效果的超链接"><a href="#无效果的超链接" class="headerlink" title="无效果的超链接"></a>无效果的超链接</h4><pre><code>&lt;a href=&quot;javascript:;&quot;&gt;随便点&lt;/a&gt;
</code></pre>
<h3 id="图片标签"><a href="#图片标签" class="headerlink" title="图片标签"></a>图片标签</h3><p>使用&lt;img&gt;自结束标签<br>src属性指定图片<br>alt添加描述，默认不会显示，有些浏览器在图片加载失败时显示<br>width和height属性设置大小</p>
<h4 id="图片格式"><a href="#图片格式" class="headerlink" title="图片格式"></a>图片格式</h4><ol>
<li>jpeg（jpg）<ul>
<li>支持颜色比较丰富，不支持透明效果和动图</li>
<li>用来显示照片</li>
</ul>
</li>
<li>gif<ul>
<li>支持颜色比较少，支持简单透明和动图</li>
<li>用来显示颜色单一的图片，动图</li>
</ul>
</li>
<li>png <ul>
<li>支持颜色丰富，支持复杂透明，不支持动图（？）</li>
<li>适合网页</li>
</ul>
</li>
<li>webp<ul>
<li>谷歌新推出的专门用来表示网页中的图片的一种格式</li>
<li>效果和大小都比较好，但是兼容性差</li>
</ul>
</li>
<li>base64<ul>
<li>将图片使用base64进行编码，将图片转化为字符</li>
<li>和网页一起加载</li>
</ul>
</li>
</ol>
<h3 id="音频，视频播放"><a href="#音频，视频播放" class="headerlink" title="音频，视频播放"></a>音频，视频播放</h3><h4 id="音频"><a href="#音频" class="headerlink" title="音频"></a>音频</h4><p>使用&lt;audio&gt;标签添加音频<br>添加controls属性让用户控制播放<br>添加autoplay属性设置自动播放，但是大部分浏览器不允许<br>添加loop属性控制循环播放<br>使用soure指定文件(多路径加播放失败后的提示)</p>
<pre><code>    &lt;audio controls&gt;
        &lt;!-- 对不起，宁德的浏览器不支持播放音频，请宁升级浏览器 --&gt;
        &lt;source src=&quot;./source/audio.mp3&quot;&gt;
        &lt;source src=&quot;./source/audio.ogg&quot;&gt;
        &lt;embed src=&quot;.source/audio.mpp3type=&quot;audio/mp3&quot; wdith=300 height=100&gt;
</code></pre>
<p>使用/<embed>标签为老浏览器添加音视频（需要指定width和height）</p>
<h4 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h4><p>使用&lt;video&gt;标签添加视频</p>
<h3 id="内联框架"><a href="#内联框架" class="headerlink" title="内联框架"></a>内联框架</h3><p>使用&lt;iframe&gt;标签引入其他页面<br>frameborder属性表示框架的边界</p>
<h2 id="八，报错"><a href="#八，报错" class="headerlink" title="八，报错"></a>八，报错</h2><p>404 网站未找到</p>
<h2 id="九，彩蛋"><a href="#九，彩蛋" class="headerlink" title="九，彩蛋"></a>九，彩蛋</h2><p>彩蛋1：<br><code>&lt;iframe src=&quot;//player.bilibili.com/player.html?aid=77217003&amp;bvid=BV1XJ411X7Ud&amp;cid=132017557&amp;page=26&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt; &lt;/iframe&gt;</code><br>彩蛋2</p>
]]></content>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>python题目分享</title>
    <url>/2022/01/06/python%E9%A2%98%E7%9B%AE%E5%88%86%E4%BA%AB/</url>
    <content><![CDATA[<p><strong>刷题ing……</strong></p>
<span id="more"></span>  
<h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p><strong>题目</strong>：企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？<br><strong>巧答</strong>：利用两个列表，省去大量if else语句</p>
<pre><code>i = int(input(&#39;净利润:&#39;))
arr = [1000000,600000,400000,200000,100000,0]
rat = [0.01,0.015,0.03,0.05,0.075,0.1]
r = 0
for idx in range(0,6):
    if i&gt;arr[idx]:
        r+=(i-arr[idx])*rat[idx]
        print ((i-arr[idx])*rat[idx])
        i=arr[idx]
print (r)  
</code></pre>
<h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p><strong>题目</strong>：一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？<br><strong>分析</strong>:<br>假设该数为 x。<br>1、则：x + 100 = n2, x + 100 + 168 = m2<br>2、计算等式：m2 - n2 = (m + n)(m - n) = 168<br>3、设置： m + n = i，m - n = j，i * j =168，i 和 j 至少一个是偶数<br>4、可得： m = (i + j) / 2， n = (i - j) / 2，i 和 j 要么都是偶数，要么都是奇数。<br>5、从 3 和 4 推导可知道，i 与 j 均是大于等于 2 的偶数。<br>6、由于 i * j = 168， j&gt;=2，则 1 &lt; i &lt; 168 / 2 + 1。<br>7、接下来将 i 的所有数字循环计算即可。  </p>
<pre><code>for i in range(1,85):
    if (168 % i == 0):
        j = 168 / i;
        if  (i &gt; j and (i + j) % 2 == 0 and (i - j) % 2 == 0 ):
            m = (i + j) / 2
            n = (i - j) / 2
            x = n * n - 100
            print(x)
</code></pre>
]]></content>
      <tags>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu学习</title>
    <url>/2021/12/25/ubuntu%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p><strong>在学习docker的时候遇到了些许困难，看来只会简单的linux命令不行，还是先深入学习一下ubuntu</strong>  </p>
<span id="more"></span>  

<pre><code>B站链接：https://www.bilibili.com/video/BV1na4y1773c?p=4
（因为之前已经安装过ubuntu所以笔记从P7之后开始）
</code></pre>
<h2 id="快照与系统恢复"><a href="#快照与系统恢复" class="headerlink" title="快照与系统恢复"></a>快照与系统恢复</h2><p>系统异常：</p>
<ol>
<li>快照</li>
<li>重装系统<h3 id="快照"><a href="#快照" class="headerlink" title="快照"></a>快照</h3><img src="/2021/12/25/ubuntu%E5%AD%A6%E4%B9%A0/%E5%BF%AB%E7%85%A71.png"><h2 id="界面功能"><a href="#界面功能" class="headerlink" title="界面功能"></a>界面功能</h2>左上角活动 -&gt; 类似于Windows系统的win+Tab  </li>
</ol>
<h2 id="linux命令"><a href="#linux命令" class="headerlink" title="linux命令"></a>linux命令</h2><h3 id="目录："><a href="#目录：" class="headerlink" title="目录："></a>目录：</h3><p>-l 详尽信息<br>pwd （print working directory）<br>~ 代表当前用户主目录<br>. 代表当前用户目录<br>.. 上一级目录<br>mkdir（make directory）创建目录  ，多级目录使用-p<br>rmdir （remove directory）删除目录（空）<br>rm （remove） -r（recursive递归）f（force）<br>cp A-&gt;B(将A复制到B)<br>mv 移动或者重命名  </p>
<h3 id="文件："><a href="#文件：" class="headerlink" title="文件："></a>文件：</h3><p><strong>文件权限</strong><br>-owner<br>-r（read）<br>-w（write）<br>-x （excut）<br>查看权限：ls -l<br>九个字符：<br>rw-自己  r–同组  r–别人<br>修改权限：chmod（chnage file mod）<br>chmod o+w name.txt<br>o表示别人 +w表示增加write权限<br>a（all）所有人  u自己<br><strong>修改属主</strong><br>chown（—R递归）<br>opt目录可以放一些公共的东西<br>先名后目录   </p>
<h3 id="归档："><a href="#归档：" class="headerlink" title="归档："></a>归档：</h3><p>tar （tape archive）打包成Tape包<br>例：tar -cvf example.tar exmple<br>其中<br>c，create，创建档案<br>v，verbose，显示详情<br>f，file<br>也可以多个文件打包成一个<br>解开tar -xvf （x，extract）后面加-C可以指定文件<br>tar -c<strong>z</strong>vf example.tar.gz example  </p>
<h3 id="软链接："><a href="#软链接：" class="headerlink" title="软链接："></a>软链接：</h3><p>ln （link） -s（soft）本体 链接名  </p>
<h3 id="对用户操作："><a href="#对用户操作：" class="headerlink" title="对用户操作："></a>对用户操作：</h3><p>useradd<br>sudo（管理员身份运行，需要sudoer）<br>-m 在/home下<br>sudo useradd -m name  创建<br>sudo password name  修改密码<br>sudo userdel name 删除用户（需要额外删除目录）  </p>
<h3 id="超级用户：root"><a href="#超级用户：root" class="headerlink" title="超级用户：root"></a>超级用户：root</h3><p>sudo password root<br>su（switch user） root<br>sudo su<br>exit  </p>
<h3 id="登录root的桌面环境："><a href="#登录root的桌面环境：" class="headerlink" title="登录root的桌面环境："></a>登录root的桌面环境：</h3><ol>
<li>终端切换root身份 </li>
<li>修改系统配置文件，gedit /etc/pam.d/gdm-autologin<br>用#注释 auth required pam_succeed_if.so user !=root quiet_success<br>gedit /etc/pam.d/gdm-password<br>注释 auth requiredpam_succeed_if.so user!= root quiet success  </li>
<li>重启  </li>
</ol>
<h3 id="用户组："><a href="#用户组：" class="headerlink" title="用户组："></a>用户组：</h3><p>groupadd group  创建组<br>useradd -m（modified） -g group name    创建用户入组<br>usermod -g boys name 修改用户入组<br>cat /etc/group 组<br>cat etc/password    </p>
<h3 id="可执行脚本"><a href="#可执行脚本" class="headerlink" title="可执行脚本"></a>可执行脚本</h3><p>脚本：Script，一种解释执行的程序<br>Linux下常见的三种脚本程序：  </p>
<ul>
<li>Shell  &emsp;*.sh  </li>
<li>Perl    &emsp; *.pl  </li>
<li>Python &emsp;*.py  </li>
</ul>
<p>可以到脚本目录直接执行脚本，也可以到脚本解释器执行脚本<br><img src="/2021/12/25/ubuntu%E5%AD%A6%E4%B9%A0/%E8%84%9A%E6%9C%AC1.png">  </p>
<h3 id="shell脚本"><a href="#shell脚本" class="headerlink" title="shell脚本"></a><strong>shell脚本</strong></h3><p>创建编辑<br><code>#！/bin/sh   </code><br><code>echo &quot;hello world&quot;</code><br>添加可执行权限<br><code>chmod +x hello.sh  </code><br>执行程序<br><code>./hello.sh   </code> </p>
<h3 id="查看Ubuntu版本"><a href="#查看Ubuntu版本" class="headerlink" title="查看Ubuntu版本"></a>查看Ubuntu版本</h3><p><code>cat /etc/lsb-release  </code><br><code>cat /etc/os-release  </code><br>uname -a  </p>
<h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><p><code>apt-get update</code>  </p>
<h3 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h3><p>配置开机自启<br><code>sudo systemctl enable（关  闭换成diable） docker  </code><br>查看 Docker 的运行状态：<br><code>sudo systemctl status docker</code><br>启动或停止docker命令<br><code>sudo service docker start</code> 启动<br><code>sudo service docker stop</code> 关闭    </p>
<h3 id="辅助"><a href="#辅助" class="headerlink" title="辅助"></a>辅助</h3><p><code>clear</code> 清屏<br><code>history</code>罗列历史命令  </p>
<h3 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h3><p><code>ip -a</code>/<code>ifconfig</code>查看ip<br><code>netstat -tunlp</code> 查看端口</p>
]]></content>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu安装docker</title>
    <url>/2021/12/29/ubuntu%E5%AE%89%E8%A3%85docker/</url>
    <content><![CDATA[<p><strong>在学习docker的安装时，由于教程中的系统是centos，而我更熟悉ubuntu，所以我需要另外去找在Ubuntu系统下安装docker的方法</strong>  </p>
<span id="more"></span>  
<p>设为管理员模式<br><code>sudo su</code><br><code>cd</code><br>更新<br><code>apt-get update</code><br>下载依赖<br><code>apt-get install apt-transport-https ca-certificates curl gnupg-agent </code></p>
<p><code>software-properties-common</code><br>添加密钥<br><code>curl -fsSL https://download.docker.com/linux/ubuntu/gpg |apt-key add </code><br>验证<br><code>apt-key fingerprint 0EBFCD88</code><br>添加仓库<br><code>sudo add-apt-repository \    &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \    $(lsb_release -cs) \    stable&quot; </code><br>更新<br><code>sudo apt-get update </code><br>安装docker<br><code>sudo apt-get install docker-ce docker-ce-cli containerd.io </code><br>检验安装<br><code>sudo docker run hello-world </code><br>配置非root用户使用docker<br><code>groupadd docker  </code><br><code>sudo usermod -aG docker （用户名） </code><br>使配置生效(建议还是注销)<br><code>newgrp docker </code><br>检验<br><code>docker run hello-world  </code><br>配置开机自启<br><code>sudo systemctl enable（关  闭换成diable） docker  </code><br>查看 Docker 的运行状态：<br><code>sudo systemctl status docker</code><br>启动或停止docker命令<br><code>sudo service docker start</code> 启动<br><code>sudo service docker stop</code> 关闭<br>参考<br><a href="https://www.bilibili.com/video/BV1jE411JDocker">在 Ubuntu 上安装 Docker【日出一点一】</a><br><a href="https://blog.sunriseydy.top/technology/server-blog/server/ubuntu_install_docker/7Df?from=search&seid=5364338390793269848&spm_id_from=333.337.0.0">博客文章地址</a><br><a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/">docker官方文档</a> </p>
]]></content>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>“教你搭建属于自己的博客”</title>
    <url>/2021/12/15/%E2%80%9C%E6%95%99%E4%BD%A0%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E2%80%9D/</url>
    <content><![CDATA[<p>执行难度：小白级<br>需求工具：b站，百度，gihub，简书，git，nodejs，科学上网工具（非必须），简单的linux指令（不会可以学，很简单）</p>
<p>第一步：观看b站教学，安装git和hexo，配置环境，生成网站并发布到github，链接如下：<br><a href="https://www.bilibili.com/video/BV1mU4y1j72n">https://www.bilibili.com/video/BV1mU4y1j72n</a><br>第二部：按照简书的一篇技术博客，学习更换主题、新建一篇博客、修改模板等，链接如下：<br><a href="https://www.jianshu.com/p/6dfc7cfdc7e0">https://www.jianshu.com/p/6dfc7cfdc7e0</a></p>
<p>注意点：<br>1.如果遇到gitbash指令报错，不要慌，可以复制error部分，百度搜索<br>2.使用git clone指令下载的东西如果过慢，可以试试科学上网，或者通过镜像下载（自行百度）<br>3.这是作者的第一篇博客，纯记事本写成，还需要不断学习，大家如有问题、见解，欢迎提问和指教</p>
]]></content>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>“hexo搜索功能出错的解决方案”</title>
    <url>/2021/12/17/%E4%B8%BAHext%E5%A2%9E%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD%E6%8A%A5%E9%94%99/</url>
    <content><![CDATA[<p><strong>今天在为hexo博客添加搜索功能时,本地生成可正常使用，上传到gihub时首页出现错位，修改主题文件中有关search的参数limits（将100改为1000成功解决问题)。</strong></p>
]]></content>
      <tags>
        <tag>debug日志</tag>
      </tags>
  </entry>
  <entry>
    <title>为python的idle增添清屏功能</title>
    <url>/2022/01/09/%E4%B8%BApython%E7%9A%84idle%E5%A2%9E%E6%B7%BB%E6%B8%85%E5%B1%8F%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<p><strong>Python的IDLE中的交互模式在某些情况下确实很方便，但代码一旦多了就很难受，为此我专门去网上查了查，找到了增加清屏功能的方法</strong></p>
<span id="more"></span>
<p>参考博客：<a href="https://blog.csdn.net/zhangbeizhen18/article/details/89214894">https://blog.csdn.net/zhangbeizhen18/article/details/89214894</a></p>
]]></content>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>关于几个网络工具</title>
    <url>/2021/12/15/%E5%85%B3%E4%BA%8E%E5%87%A0%E4%B8%AA%E7%BD%91%E7%BB%9C%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<p><strong>在使用steam社区、搜论文、上GitHub的时候，总会遇到一些网络上的障碍</strong><br>至于这些障碍是什么（懂得都懂，不懂的可以自行搜索“中国国家防火墙GFW”），这时，我们就需要一些必要的工具：  </p>
<span id="more"></span>  
<h4 id="一，网易uu加速器"><a href="#一，网易uu加速器" class="headerlink" title="一，网易uu加速器"></a>一，网易uu加速器</h4><p>可以免费加速steam社区，解决一些加好友、访问创意工坊、送游戏之类的问题。</p>
<h4 id="二，Sidecar"><a href="#二，Sidecar" class="headerlink" title="二，Sidecar"></a>二，Sidecar</h4><p>一款免费开源的，用于专门加速GitHub这个全球最大的<br>同性交友网站。而且就在我用gitbash上传博客出现奇怪报错（挂小飞机、按网上指示修改文件参数、回退文件内容都没用），最后无可奈何到了重装nodejs边缘<br>的时候是它自带的NPM加速拯救了整个世界。<br>    注：可在github上获取  </p>
<h4 id="三，科学上网"><a href="#三，科学上网" class="headerlink" title="三，科学上网"></a>三，科学上网</h4><p>这个最好了解一下翻墙原理，谨慎使用，不要发敏感言<br>论，注意隐私安全（在YouTube上看了下抓包，好像在服务器端窃取你的信息还是很容易的)。<br>    附一篇很有用的博客：<br>    <a href="https://tecrobe.github.io/blog/post/how-to-break-wall/">https://tecrobe.github.io/blog/post/how-to-break-wall/</a></p>
]]></content>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>将手机上的B站视频传输到电脑端播放</title>
    <url>/2022/01/24/%E5%B0%86%E6%89%8B%E6%9C%BA%E4%B8%8A%E7%9A%84B%E7%AB%99%E8%A7%86%E9%A2%91%E4%BC%A0%E8%BE%93%E5%88%B0%E7%94%B5%E8%84%91%E7%AB%AF%E6%92%AD%E6%94%BE/</url>
    <content><![CDATA[<p><strong>今天坐高铁，发现其实座位上是有插座的，所以就研究了一番，将手机上缓存好的B站视频换到笔记本上观看</strong></p>
<p><strong>硬件需要：一根USB线（可传输数据）</strong><br><strong>软件需要：一个视频播放器（我选择了免费干净的Potplay）</strong></p>
<span id="more"></span>

<p>第一步：打开手机B站，找出缓存文件的存放目录，一般离线设置里就有，如果是默认的话就百度一下，我的是在<code>Android\data\tv.danmaku.bili\download</code>，里面有按数字<strong>序号</strong>整理的视频文件夹</p>
<p>第二步：在手机B站上找到离线诊断，找到所要播放视频的<strong>序号</strong></p>
<p>第三步：打开电脑，用USB线连接电脑与手机，手机上点击允许文件传输之类的选项。在电脑上按第一步的路径在打开，将视频文件复制到电脑上的储存区域，拔掉USB线</p>
<p>第四步：打开文件夹，会看到两个文件，一个叫video（视频），一个叫audio（音频）。我们需要把他们合起来播放（Potplay下的方法是用打开视频，右键-&gt;打开-&gt;导入音频），其它播放软件如qq影音、爱奇艺之类的，可以百度：某某某怎样导入音频</p>
<p><strong>注：如果导入音频的那个窗口中看不见audio，可以试试直接改文件后缀名为.mp3（比较暴力，但我成功了），或者转一下码</strong></p>
]]></content>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>快捷键</title>
    <url>/2022/01/02/%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<p><strong>记录一下快捷键</strong></p>
<span id="more"></span>  
<h2 id="IDLE"><a href="#IDLE" class="headerlink" title="IDLE"></a>IDLE</h2><p>Alt + N &emsp; / &emsp; Alt + P 查看上下历史命令<br>Ctrl + F6 重启shell<br>F1  打开帮助文件<br>Alt + /  补全曾经出现的单词<br>Ctrl + [&emsp; /&emsp;Ctrl +] 缩进代码和取消缩进<br>Alt + M 查看源码<br>Alt + C 打开类浏览器<br>F5 运行程序  
 </p>
]]></content>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>我收藏的几个网站</title>
    <url>/2021/12/28/%E6%88%91%E6%94%B6%E8%97%8F%E7%9A%84%E5%87%A0%E4%B8%AA%E7%BD%91%E7%AB%99/</url>
    <content><![CDATA[<p><strong>今天我来分享几个自己在用的宝藏网站，点击标题可转到相应网站</strong>  </p>
<span id="more"></span>  
<h2 id="学吧导航"><a href="#学吧导航" class="headerlink" title="学吧导航"></a><a href="https://www.xue8nav.com/">学吧导航</a></h2><p>一个超好用的学习导航，还可以自定义导航内容  </p>
<h2 id="笔仙儿导航"><a href="#笔仙儿导航" class="headerlink" title="笔仙儿导航"></a><a href="http://bixianer.com/">笔仙儿导航</a></h2><p>之前用的导航，比较综合，也十分好用，不过因为站点不稳定，就换成学吧了  </p>
<h2 id="Guerrilla-Mail"><a href="#Guerrilla-Mail" class="headerlink" title="Guerrilla Mail"></a><a href="https://www.guerrillamail.com/inbox">Guerrilla Mail</a></h2><p>无需注册，随机生成N个临时邮箱供你使用，匿名操作和反复白嫖的神器  </p>
<h2 id="优品PPT"><a href="#优品PPT" class="headerlink" title="优品PPT"></a><a href="https://www.ypppt.com/">优品PPT</a></h2><p>用了六年还是那么良心，免注册免费下载PPT模板 </p>
<h2 id="iLovePDF"><a href="#iLovePDF" class="headerlink" title="iLovePDF"></a><a href="https://www.ilovepdf.com/zh-cn">iLovePDF</a></h2><p>该网站可实现在线编辑PDF文件  </p>
<h2 id="AirPortal"><a href="#AirPortal" class="headerlink" title="AirPortal"></a><a href="https://airportal.cn/">AirPortal</a></h2><p>可以实现通过网页传文件的骚操作  </p>
<h2 id="田间小站"><a href="#田间小站" class="headerlink" title="田间小站"></a><a href="https://www.tjxz.cc/">田间小站</a></h2><p>小词详解、单词溯源、英语幽默、美国习语均在田间小站，而且并有在线短篇小说和免费下载的经典长篇和期刊    </p>
<h2 id="英语真题在线"><a href="#英语真题在线" class="headerlink" title="英语真题在线"></a><a href="https://zhenti.burningvocabulary.com/">英语真题在线</a></h2><p>免费在线预览或下载四六级真题，并提供听力和答案。<br>注：临考阶段因为盈利暂时会对非会员关闭，所以推荐提前下载 </p>
<h2 id="古诗文网"><a href="#古诗文网" class="headerlink" title="古诗文网"></a><a href="https://www.gushiwen.cn/">古诗文网</a></h2><p>不妨来点诗词歌赋装点一下自己，另外我很喜欢它的公众号，排队等车必备</p>
<h2 id="全历史"><a href="#全历史" class="headerlink" title="全历史"></a><a href="https://www.allhistory.com/">全历史</a></h2><p>学习历史的宝藏网站  </p>
<h2 id="中华珍宝馆"><a href="#中华珍宝馆" class="headerlink" title="中华珍宝馆"></a><a href="http://ltfc.net/exhibit/essence">中华珍宝馆</a></h2><p>养生摸鱼必备，里面有超多高清古画和书法，记得高中我找过几张当班里电脑的壁纸  </p>
<h2 id="西电网站合集-链接为西电导航"><a href="#西电网站合集-链接为西电导航" class="headerlink" title="西电网站合集(链接为西电导航)"></a><a href="https://xidian.cc/">西电网站合集(链接为西电导航)</a></h2><p><a href="https://rs.xidian.cc/">https://rs.xidian.cc/</a><br>西电睿思yyds，高清电影、游戏、音乐均在睿思，注：需要校园网和邀请码<br><a href="https://lib.xidian.edu.cn/">https://lib.xidian.edu.cn/</a><br>西电图书馆，本来还想推荐爱学术来着，后来一想有图书馆数据库谁用那个，注：本科生常用数据库有很多好东西，但需要校园<br>网 </p>
]]></content>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows系统下查找当前占用特定端口的程序</title>
    <url>/2022/01/09/%E6%9F%A5%E7%9C%8B%E6%98%AF%E5%93%AA%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%8D%A0%E7%94%A8%E7%AB%AF%E5%8F%A3%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p><strong>今天使用一个软件时显示1085端口占用，我想找出时那个程序在占用它</strong></p>
<span id="more"></span>

<p>打开命令提示符程序（管理员身份）</p>
<p> <code>netstat -ano</code>该命令为查看所有端口</p>
<p> <code>netstat -aon|findstr &quot;1085(此处为端口号&quot;</code>该命令为查看特定端口</p>
<p> 找到最后的程序代号（pid）后输入</p>
<p> <code>tasklist|findstr &quot;2188(此处为程序代号）&quot;</code></p>
<p> 结束掉该进程<br> <code>taskkill /T /F /PID 2188</code></p>
]]></content>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>我的世界局域网ip地址错误及解决方案</title>
    <url>/2021/12/26/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C%E5%B1%80%E5%9F%9F%E7%BD%91ip%E5%9C%B0%E5%9D%80%E9%94%99%E8%AF%AF%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<p><strong>今天，想准备用Java版我的世界进行局域网和舍友进行联机，但有一个舍友搜索不到本地服务器，其他三人均可进行联机。</strong><br> <span id="more"></span>  </p>
<h2 id="问题排查"><a href="#问题排查" class="headerlink" title="问题排查"></a>问题排查</h2><p> 打开两个游戏界面，一个负责创建局域网端口，一个负责加入  </p>
<p> 现象：<br> 自己创建的局域网世界可以被自己搜索到，但是同校园网宿舍WiFi下，其他人创建的局域网世界搜索不到，自己的局域网世界，别人也搜索不到。 并且，自己创建的局域网世界所显示IP地址和其他人不一样（这里称它为错误IP）   </p>
<p> 在shell中（管理员身份）使用ipconfig命令  </p>
<p> 现象：<br> 发现自己本机实际IP和游戏中显示的错误IP不一致，按IP分段，本机实际IP与舍友同段，应该是正确的   </p>
<p> 将网线连接路由器与问题设备  </p>
<p> 现象：<br> ip改变，联机恢复正常  </p>
<p> 继续研究ipconfig所提供的信息，发现错误IP和VMware的第一个虚拟网卡所提供的IP是一样的  </p>
<h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p> 打开控制面板-&gt;网络-&gt;高级选项，禁用VMware虚拟网卡或者以太网，成功解决问题  </p>
<p>原来，所下载的Java版我的世界优先使用有线网络连接所分配的IP，所以误把VMware虚拟环境下所生成的IP当成有限网络IP优先使用</p>
]]></content>
      <tags>
        <tag>debug日志</tag>
      </tags>
  </entry>
  <entry>
    <title>正则表达式学习</title>
    <url>/2022/01/11/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>学习一下万能的正则表达式</p>
<span id="more"></span>
<p>regex101.com</p>
<h2 id="限定符"><a href="#限定符" class="headerlink" title="限定符"></a>限定符</h2><h3 id="？"><a href="#？" class="headerlink" title="？"></a>？</h3><p><code>/used?</code><br>表示d可以出现一次或零次</p>
<h3 id=""><a href="#" class="headerlink" title="*"></a>*</h3><p><code>ab*c</code><br>匹配零个或多个字符，如abbbbc。ac等</p>
<h3 id="-1"><a href="#-1" class="headerlink" title="+"></a>+</h3><p><code>ab+c</code><br>一个或多个字符,如ac就不匹配</p>
<h3 id="-2"><a href="#-2" class="headerlink" title="{}"></a>{}</h3><p><code>ab&#123;6&#125;c</code><br>指定出现次数，如指定六次<br><code>ab&#123;0,4&#125;c</code><br>指定范围，如指定b出现零到六次（闭区间）也可省略六，为两次及以上</p>
<h3 id="-3"><a href="#-3" class="headerlink" title="()"></a>()</h3><p><code>(abc)&#123;2,&#125;</code><br>（）与限定符结合，对字符串经行相应的限定</p>
<h2 id="或运算符"><a href="#或运算符" class="headerlink" title="或运算符"></a>或运算符</h2><p> <code>a (cat|dog)</code><br> 表示要么是cat要么是dog</p>
<h2 id="字符类"><a href="#字符类" class="headerlink" title="字符类"></a>字符类</h2><p> <code>[abc]+</code><br> 匹配由abc构成的单词(无序)<br> <code>[a-z]+</code><br> <code>[a-zA-Z0-9]+</code><br> 加^号可以做排除<br> <code>[^0-9]</code><br> 匹配数字以外的字符（包括换行符）</p>
<h2 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h2><h3 id="d"><a href="#d" class="headerlink" title="\d"></a>\d</h3><p> 数字字符</p>
<h3 id="D"><a href="#D" class="headerlink" title="\D"></a>\D</h3><p> 非数字字符</p>
<h3 id="w"><a href="#w" class="headerlink" title="\w"></a>\w</h3><p> 单词字符（英文、数字、下划线）</p>
<h3 id="W"><a href="#W" class="headerlink" title="\W"></a>\W</h3><p> 非单词字符</p>
<h3 id="s"><a href="#s" class="headerlink" title="\s"></a>\s</h3><p> 空白符（空格、制表、换行）</p>
<h3 id="S"><a href="#S" class="headerlink" title="\S"></a>\S</h3><p> 非空白字符</p>
<h3 id="-4"><a href="#-4" class="headerlink" title="."></a>.</h3><p> 任意字符（不包含换行符）</p>
<h3 id="-5"><a href="#-5" class="headerlink" title="^"></a>^</h3><p> 匹配行首</p>
<h3 id="-6"><a href="#-6" class="headerlink" title="$"></a>$</h3><p> 匹配行尾</p>
<h3 id="b"><a href="#b" class="headerlink" title="\b"></a>\b</h3><p> 表示边界</p>
<h2 id="贪婪与懒惰"><a href="#贪婪与懒惰" class="headerlink" title="贪婪与懒惰"></a>贪婪与懒惰</h2><p> 在+后面加？，将原本尽可能多地匹配内容长地原则转换为尽可能少地匹配</p>
]]></content>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>油猴插件推荐</title>
    <url>/2021/12/28/%E6%B2%B9%E7%8C%B4%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90/</url>
    <content><![CDATA[<p><strong>俗话说的好，没有油猴插件的浏览器，算不上真正意义上的浏览器。上一篇介绍了几个宝藏网站，这次教你使用油猴脚本，让你的上网体验再次得到提升</strong>  </p>
<span id="more"></span>    
<h2 id="油猴的优点"><a href="#油猴的优点" class="headerlink" title="油猴的优点"></a>油猴的优点</h2><p>油猴支持丰富的网站脚本，从自动刷网课、免vip追剧，下载B站视频到图片搜索、调整字体、设置护眼模式等，并且安装管理简易，不需要编程基础，完全就是点点点，对用户非常友好</p>
<h2 id="油猴的安装"><a href="#油猴的安装" class="headerlink" title="油猴的安装"></a>油猴的安装</h2><p>Windows系统自带的Microsoft Edge、火狐浏览器、谷歌浏览器等均可支持油猴扩展<br>1.在浏览器设置中找到插件或者扩展<br>火狐：<br><img src="/2021/12/28/%E6%B2%B9%E7%8C%B4%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90/%E5%8F%B6%E5%AD%90%E7%9A%84%E5%8D%9A%E5%AE%A2.png" alt=" "><br>Microsoft Edge：<br><img src="/2021/12/28/%E6%B2%B9%E7%8C%B4%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90/%E6%B2%B9%E7%8C%B4.png" alt=" "><br>点击并找到更多插件的选项，搜索tempermonkey或者油猴<br>安装完成你就可以在浏览器的上方工具栏中找到它了<br><img src="/2021/12/28/%E6%B2%B9%E7%8C%B4%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90/%E6%B2%B9%E7%8C%B41.png" alt=" ">  </p>
<h2 id="油猴插件"><a href="#油猴插件" class="headerlink" title="油猴插件"></a>油猴插件</h2><p>点击油猴图标，点击获取新脚本<br><img src="/2021/12/28/%E6%B2%B9%E7%8C%B4%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90/%E6%B2%B9%E7%8C%B42.png" alt=" "><br>一般会选择GreasyFork。你可以在里面搜索你想要的脚本，点击安装即可使用（记得刷新网页）。<br>点击油猴图标可对插件进行管理，不用某个脚本时（多开会占用一定内存），你可以选择把它关掉或者删除  </p>
<h2 id="自己在用的脚本"><a href="#自己在用的脚本" class="headerlink" title="自己在用的脚本"></a>自己在用的脚本</h2><p>1.AC-baidu-重定向优化百度搜狗谷歌必应搜索_favicon_双列<br>好用，真好用，作用让是你的搜索结果变成这样<br><img src="/2021/12/28/%E6%B2%B9%E7%8C%B4%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90/%E6%B2%B9%E7%8C%B43.png" alt=" "><br>2.字体渲染<br>当你第一次用这个脚本的时候，你会感觉眼睛一下舒服了许多<br>3.全网VIP破解<br>这个其实我下了但没有用，原因一是我不用爱奇艺、腾讯视频之类，二是作者注明了会收取一定广告费用，但是我一个舍友因为追综艺一直在用<br><strong>4.UserJS</strong><br>授人以鱼不如授人以渔，这个脚本会检索出对于当前网页大家都在用什么脚本<br><img src="/2021/12/28/%E6%B2%B9%E7%8C%B4%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90/%E6%B2%B9%E7%8C%B44.png" alt=" ">  </p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>油猴脚本是开源的，这意味着所以人都可以去审查它的（安全性有<strong>一定</strong>保证），当然也可以按照自己的需求对它进行改编，油猴脚本众多，大家还需要进行探索，找到适合自己的脚本。 </p>
]]></content>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>桌面美化</title>
    <url>/2021/12/17/%E8%A7%A3%E9%94%81%E6%83%8A%E8%89%B3%E6%A1%8C%E9%9D%A2/</url>
    <content><![CDATA[<pre><code>本篇博客与xmz合作完成（主要是他写的，我只负责转成.md格式），感谢舍友xmz的创作与分享！
</code></pre>
<h2 id="快来解锁个性化壁纸："><a href="#快来解锁个性化壁纸：" class="headerlink" title="快来解锁个性化壁纸："></a>快来解锁个性化壁纸：</h2><p><img src="/2021/12/17/%E8%A7%A3%E9%94%81%E6%83%8A%E8%89%B3%E6%A1%8C%E9%9D%A2/1.jpg" alt="1"></p>
<span id="more"></span>
<p><img src="/2021/12/17/%E8%A7%A3%E9%94%81%E6%83%8A%E8%89%B3%E6%A1%8C%E9%9D%A2/2.jpg" alt="2"><br>拥有一个好看的桌面是有仪式感的生活中必不可少的一部分。这个国庆节之前我一直用的出厂桌面。。。。（找不到原来的壁纸了，就放了张网图）。 </p>
<p>趁国庆节7天假期，我突然觉得我这么追求仪式感的家伙应该搞一个惊艳的壁纸（哈哈哈），于是我去搜索了一些壁纸软件像upupoo，还有wallpaper engine等，然后发现主流的壁纸软件个性化很差，可以说没有自由度，（主要原因还是贵。。。），</p>
<p>这我能忍？于是我去知乎上经过了一番搜索发现了几位大神博主分享的几个软件，我把其中3个软件结合使用，然后得到了图1图2等（还有很多没放出来）壁纸，（是不是比原厂壁纸好多了）做出来的桌面干净清爽，还能检测和控制系统参数（电池，cpu占用，音量，磁盘剩余空间等等），我发现可以说利用这三款软件你的桌面可以随心所欲的变成你想要的样子，而不用纠结于其他壁纸软件中的某几个壁纸了（主要还不用花钱 ：） ），<strong>好东西肯定要跟大家分享了</strong>。  </p>
<p>话不多说，来介绍一下这三款软件和操作步骤。（文章后面会附带百度网盘链接，不用谢~）  </p>
<h2 id="1-TranslucentTB"><a href="#1-TranslucentTB" class="headerlink" title="1.TranslucentTB"></a>1.TranslucentTB</h2><p>知乎上的大神推荐的第一款软件是TranslucentTB，我从别处找到了一个同样作用的小软件，它的作用就是让你的任务栏变成透明的，就是从以前的样子变成下图这样（这是我做的，任务栏下面是壁纸和插件，显得有点乱，但是最终时要将任务栏隐藏起来的。）<br><img src="/2021/12/17/%E8%A7%A3%E9%94%81%E6%83%8A%E8%89%B3%E6%A1%8C%E9%9D%A2/3.jpg" alt="3"><br>这个软件操作很简单点开快捷方式后任务栏就会自动变透明。  </p>
<h2 id="2-Rainmeter（雨滴桌面）"><a href="#2-Rainmeter（雨滴桌面）" class="headerlink" title="2.Rainmeter（雨滴桌面）"></a>2.Rainmeter（雨滴桌面）</h2><p>这是一个开源的皮肤软件也是壁纸个性化的精髓，你可以通过它在你的桌面上添加任加你想要的插件，如果网上的插件不够你用你甚至可以自己用代码做一个（如果你会的话，我比较菜所以不会，但是网上的众多资源确实够用了！）功能强大，所以操作必然就相对复杂一点（但我相信聪明的你一定可以轻松驾驭）。来介绍一下雨滴桌面的操作。<br><img src="/2021/12/17/%E8%A7%A3%E9%94%81%E6%83%8A%E8%89%B3%E6%A1%8C%E9%9D%A2/4.jpg" alt="4"><br>下载安装完后是一个文件夹，打开之后有如上文件，第六个就是应用程序，打开它软件就开始运行了，自带的插件很难看，直接右键菜单里的关闭壁纸关掉，倒数第二个是插件的安装程序，用来安装网上下载或DIY的插件。（注意安装插件过程。下载的文件如果是.rmskin格式，右键点击打开方式找到这个倒数第二个程序（skininstaller），如果不是就用记事本打开配置文件，复制里面的代码，自己创建皮肤包，粘贴进去，别忘记把文件夹里的图片等copy进你建的文件夹）  </p>
<p><img src="/2021/12/17/%E8%A7%A3%E9%94%81%E6%83%8A%E8%89%B3%E6%A1%8C%E9%9D%A2/5.jpg" alt="5"><br>上图是插件的右键菜单，里面的选项可以自己探索看看，若点击管理皮肤就会呼出下图菜单（rainmeter管理器），左边框框里是你下载的插件（如时间，天气，日期的各种花里胡哨的图案或音乐频谱等。）点击即可在右边配置。如图一，我加载了时间，日期，问候，几个系统参数，音乐频谱和时钟等，我用的几个插件也会在后面分享。关于rainmeter如果有问题也可找我问。  </p>
<p><img src="/2021/12/17/%E8%A7%A3%E9%94%81%E6%83%8A%E8%89%B3%E6%A1%8C%E9%9D%A2/6.jpg" alt="6"><br>还有个功能值得说一下，就是下图菜单中的主题，你可以把做好的皮肤一键保存，然后一键加载，十分好用。  </p>
<p><img src="/2021/12/17/%E8%A7%A3%E9%94%81%E6%83%8A%E8%89%B3%E6%A1%8C%E9%9D%A2/7.jpg" alt="7">   </p>
<h2 id="3-Bitdock"><a href="#3-Bitdock" class="headerlink" title="3.Bitdock"></a>3.Bitdock</h2><p><img src="/2021/12/17/%E8%A7%A3%E9%94%81%E6%83%8A%E8%89%B3%E6%A1%8C%E9%9D%A2/8.jpg" alt="8"><br>简单说就是一个用来代替任务栏的应用，像极了mac os系统。。。比任务栏好看多了，而且动画流畅，支持自己调节，正确打开方式是把任务栏透明后隐藏在屏幕左侧，实际上Bitdock可以完美取代win10的任务栏，而且提供了几个好用的功能（自己去看看！）。  </p>
<p><strong>至此，三个软件就都介绍完了，都安装好后你的个性桌面就上线了！！！</strong></p>
<p>有几个小tips：  </p>
<ol>
<li>第2，3个软件都可开机自启，但第一个不好设置，建议把它的快捷方式固定在任务栏，开机后点击一下就好了。  </li>
<li>三个软件系统占用都比较低，不用担心打开后电脑hold不住  </li>
<li>Rainmeter的插件可以在右键菜单里调节一些设置，摆放好插件位置后一定要勾选“点击穿透”  </li>
<li>取消勾选显示桌面图标选项能隐藏桌面应用图标，美化桌面，可以把应用应用图标放在Bitdock里<br><img src="/2021/12/17/%E8%A7%A3%E9%94%81%E6%83%8A%E8%89%B3%E6%A1%8C%E9%9D%A2/8.jpg" alt="8"><h3 id="应用链接"><a href="#应用链接" class="headerlink" title="应用链接"></a>应用链接</h3>雨滴桌面去官网自己下rainmeter.net/  </li>
<li>任务栏透明链接：<a href="https://pan.baidu.com/s/1C8OgzxNsCvjYoxQyWTYXTA">https://pan.baidu.com/s/1C8OgzxNsCvjYoxQyWTYXTA</a><br>提取码：zh1k</li>
<li>Bitdock自己去官网BitDock比特工具栏-官方网站</li>
<li>插件链接：链接：<a href="https://pan.baidu.com/s/1n2Qu5oB0uSCvKjFZb-3oGA">https://pan.baidu.com/s/1n2Qu5oB0uSCvKjFZb-3oGA</a><br>提取码：wull</li>
</ol>
<p><strong>忘了一件最重要的事！惊艳的桌面必须要惊艳的壁纸，发挥你们的能力自己去找点吧！</strong></p>
<h2 id="制作人：xmz"><a href="#制作人：xmz" class="headerlink" title="制作人：xmz"></a>制作人：xmz</h2>]]></content>
      <tags>
        <tag>与xmz的合作</tag>
      </tags>
  </entry>
  <entry>
    <title>css学习</title>
    <url>/2022/02/05/css%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p><strong>大致学完html基础后，开始学习css，向python脚本迈进</strong></p>
<span id="more"></span>
<h2 id="一，层叠样式表"><a href="#一，层叠样式表" class="headerlink" title="一，层叠样式表"></a>一，层叠样式表</h2><h2 id="二，设置形式"><a href="#二，设置形式" class="headerlink" title="二，设置形式"></a>二，设置形式</h2><h3 id="内联"><a href="#内联" class="headerlink" title="内联"></a>内联</h3><p>只对一个标签生效（不推荐使用）<br>    <p style= "color:red; font-size: 64psx">大风起兮</p><br>效果：</p>
<p style= "color:red; font-size: 64psx">大风起兮</p>

<h3 id="内部样式表"><a href="#内部样式表" class="headerlink" title="内部样式表"></a>内部样式表</h3><p>在head中创建style标签</p>
<pre><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;Document&lt;/title&gt;
    &lt;style&gt;
        p&#123;
            color: yellow;
            font-size： 50psx；
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;p&gt;云飞扬&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<h3 id="外部样式表"><a href="#外部样式表" class="headerlink" title="外部样式表"></a>外部样式表</h3><p>放入一个单独的css文件中，通过在head中添加link便签引入（使用到缓存机制，从而实现加速）</p>
<pre><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;./style.css&quot;&gt;
</code></pre>
<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>使用/*和*/进行注释</p>
<h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><h3 id="纯标签法"><a href="#纯标签法" class="headerlink" title="纯标签法"></a>纯标签法</h3><h3 id="id法"><a href="#id法" class="headerlink" title="id法"></a>id法</h3><pre><code>#red&#123;
    color:red
&#125;
&lt;p id=&quot;abc&quot;&gt;今天手气真不错 &lt;/p&gt;
</code></pre>
<h3 id="类选择器（class属性）"><a href="#类选择器（class属性）" class="headerlink" title="类选择器（class属性）"></a>类选择器（class属性）</h3><pre><code>.blue&#123;
    color:&quot;red&quot;;
&#125;
.big&#123;
    font-size:60ps; 
&#125;
&lt;p class=&quot;blue&quot;&gt;红色还是蓝色&lt;/p&gt;
</code></pre>
<h3 id="通配选择器"><a href="#通配选择器" class="headerlink" title="通配选择器"></a>通配选择器</h3><pre><code>*&#123;
    color：red
&#125;

所有元素都会发生改变
</code></pre>
<h2 id="选择器的高级用法"><a href="#选择器的高级用法" class="headerlink" title="选择器的高级用法"></a>选择器的高级用法</h2><h3 id="复合选择器"><a href="#复合选择器" class="headerlink" title="复合选择器"></a>复合选择器</h3><h4 id="交集"><a href="#交集" class="headerlink" title="交集"></a>交集</h4><pre><code>.red&#123;
    color:&quot;red&quot;;
&#125;
div.red&#123;
    font-size:34px;
&#125;
</code></pre>
<h4 id="并集"><a href="#并集" class="headerlink" title="并集"></a>并集</h4><pre><code>.acd , adc&#123;
    ......
&#125;
</code></pre>
<h3 id="关系选择器"><a href="#关系选择器" class="headerlink" title="关系选择器"></a>关系选择器</h3><h4 id="父子"><a href="#父子" class="headerlink" title="父子"></a>父子</h4><pre><code>`div&gt;span`
</code></pre>
<h3 id="后代"><a href="#后代" class="headerlink" title="后代"></a>后代</h3><p><code>div span</code><br>(选中所以后代为plate *)</p>
<h3 id="兄弟"><a href="#兄弟" class="headerlink" title="兄弟"></a>兄弟</h3><pre><code>`P + span`下一个
`p ~ span`下边所有
</code></pre>
<h3 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h3><p> 选择p元素带title属性的     </p>
<pre><code> p[title]&#123;
    color:orange;
&#125;
</code></pre>
<ul>
<li>[属性名]</li>
<li>[属性名=属性值]</li>
<li>[属性名^=属性值]（以某个属性值开头）</li>
<li>[属性名$=属性值]（结尾）</li>
<li>[属性名*=属性值]（包含）</li>
</ul>
<h3 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h3><p>伪类（不存在的，特殊的类），如第一个子元素，被点击的类，鼠标移入的类，一般以”:”开头</p>
<h4 id="排序选择"><a href="#排序选择" class="headerlink" title="排序选择"></a>排序选择</h4><p>为了代替ul&gt;li.first<br>如:<br>ul&gt;li:frist-child（其他元素也参与排序，不参与的用first-of-type）</p>
<p>only-of-type表示选择单一的那个</p>
<p>ul&gt;li:nth-child(0)—-&gt;</p>
<ul>
<li>()内填n表示所有</li>
<li>填2n（even）表示偶数序号，</li>
<li>n+d表示从d开始</li>
</ul>
<h4 id="非选择器"><a href="#非选择器" class="headerlink" title="非选择器"></a>非选择器</h4><p>：not（）</p>
<h4 id="超链接选择器"><a href="#超链接选择器" class="headerlink" title="超链接选择器"></a>超链接选择器</h4><ul>
<li><p>link 正常的</p>
</li>
<li><p>visited 访问过的</p>
</li>
<li><p>hover 鼠标移入</p>
</li>
<li><p>active 鼠标点击<br>  a:link{</p>
<pre><code>  color:&quot;red&quot;;
</code></pre>
<p>  }<br>  a:visited{</p>
<p>  }<br>  visited考虑到隐私不能直接调整大小</p>
<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>：empty 空的那个</p>
<h3 id="伪元素选择器"><a href="#伪元素选择器" class="headerlink" title="伪元素选择器"></a>伪元素选择器</h3><p>使用：：开头</p>
<h4 id="选中首字母、首行"><a href="#选中首字母、首行" class="headerlink" title="选中首字母、首行"></a>选中首字母、首行</h4><p>  P::first-letter<br>  p：：first-line{</p>
<pre><code>  background-color:yellow;
</code></pre>
<p>  }</p>
<h4 id="被鼠标右键选中的文字"><a href="#被鼠标右键选中的文字" class="headerlink" title="被鼠标右键选中的文字"></a>被鼠标右键选中的文字</h4><p>  p::selection{</p>
<pre><code>  background-color:greenyellow
</code></pre>
<p>  }</p>
<h4 id="元素的开始和结尾"><a href="#元素的开始和结尾" class="headerlink" title="元素的开始和结尾"></a>元素的开始和结尾</h4></li>
<li><p>::before</p>
</li>
<li><p>::after</p>
</li>
</ul>
<p>结合conten属性使用</p>
<pre><code>div::after&#123;
    content:&quot;abc&quot;;
    color:&quot;red&quot;;
&#125;
</code></pre>
<h2 id="继承和优先级"><a href="#继承和优先级" class="headerlink" title="继承和优先级"></a>继承和优先级</h2><p>一般背景、格式不被继承</p>
<p>选择器权重</p>
<ol>
<li><p>内联样式 –&gt; 1，0，0，0</p>
</li>
<li><p>id选择器 –&gt; 0，1，0，0</p>
</li>
<li><p>类和伪类选择器 –&gt; 0，0，1，0</p>
</li>
<li><p>元素选择器 –&gt; 0，0，0，1</p>
</li>
<li><p>通配选择器 –&gt; 0，0，0，0</p>
</li>
<li><p>继承选择器 –&gt; 无优先级</p>
</li>
<li><p>加入importanrt属性有最高优先级（慎用）<br>(“,”并集单独计算，不相加，单类选择器再高也不能跨越数量级)</p>
<h2 id="大小与颜色"><a href="#大小与颜色" class="headerlink" title="大小与颜色"></a>大小与颜色</h2><h3 id="像素和百分比，em和rem"><a href="#像素和百分比，em和rem" class="headerlink" title="像素和百分比，em和rem"></a>像素和百分比，em和rem</h3><p> .box1{</p>
<pre><code> width:100px;
</code></pre>
<p> }<br> .box2{</p>
<pre><code> width:50%;(相对于父辈大小)
</code></pre>
<p> }<br> .box3{</p>
<pre><code> width:10em;（相对于元素的字体大小1em = 1font-size，默认16像素）
</code></pre>
<p> }<br> .box4{</p>
<pre><code> wdith:10rem;
 #相对于html的字体大小计算
</code></pre>
<p> }</p>
<h3 id="字体族"><a href="#字体族" class="headerlink" title="字体族"></a>字体族</h3><p> font-family：;（建议，无版权问题）<br> serif,sans-serif,monspace,cursive,fantasy,system-ui<br> 将服务器中的字体提供给用户使用（版权）<br> font-face{</p>
<pre><code> font-family:&quot; &quot;;起名
 src：url（&#39;&#39;）format（‘truetype’）;路径
</code></pre>
<p> }</p>
<h3 id="RGB与RGBA，HSL与HSLA"><a href="#RGB与RGBA，HSL与HSLA" class="headerlink" title="RGB与RGBA，HSL与HSLA"></a>RGB与RGBA，HSL与HSLA</h3><p>使用RGB值表示颜色</p>
</li>
</ol>
<ul>
<li><p>R-red </p>
</li>
<li><p>G-green</p>
</li>
<li><p>B-blue</p>
</li>
<li><p>0~255</p>
</li>
<li><p>语法：rgb（255，0，0）<br>加入A表示透明<br>使用十六进制表示RGB：<br><code>background-color:#ff0000</code>(都是两位重复可简写)<br>H：色相（0-360）<br>S：饱和度（0-100%）<br>L：亮度（0-100%）</p>
<h2 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h2><h3 id="文档流"><a href="#文档流" class="headerlink" title="文档流"></a>文档流</h3><p>层式结构的最底层称为文档流</p>
<h4 id="元素在文档流中的特点"><a href="#元素在文档流中的特点" class="headerlink" title="元素在文档流中的特点"></a>元素在文档流中的特点</h4></li>
<li><p>块元素</p>
<ul>
<li>独占一行</li>
<li>默认宽度是父元素的全部</li>
<li>默认高度被子元素撑开</li>
</ul>
</li>
<li><p>行内元素</p>
<ul>
<li>不会独占一行</li>
<li>不能容纳时换行</li>
</ul>
</li>
</ul>
<h3 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h3><h4 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h4><ul>
<li>内容区（content）</li>
<li>边框（border)</li>
<li>内边距（padding）</li>
<li>外边距（margin）<h4 id="边框"><a href="#边框" class="headerlink" title="边框"></a>边框</h4></li>
<li>border-width<br>边框宽度，顺序为上右下左，对称可省略</li>
<li>border-top/right/botttom/left-width/sytle/</li>
<li>border-color，默认黑色</li>
<li>border-style<ul>
<li>solid,实线</li>
<li>dotted，点状虚线</li>
<li>dashed ，虚线</li>
<li>double，双线</li>
<li>none，没有</li>
</ul>
</li>
<li><strong>border</strong>一套全齐<h4 id="内边距"><a href="#内边距" class="headerlink" title="内边距"></a>内边距</h4>内容区和边界之间的距离(会影响盒子大小，默认采取背景颜色)</li>
<li>padding-top/right/…</li>
<li>padding一套齐全<h4 id="外边距"><a href="#外边距" class="headerlink" title="外边距"></a>外边距</h4>margin-top/bottom<br>设置左、上默认移动元素，设置下、右移动其他元素  <h4 id="水平布局与垂直布局"><a href="#水平布局与垂直布局" class="headerlink" title="水平布局与垂直布局"></a>水平布局与垂直布局</h4>垂直溢出overflow（-x/y）：visiable，hidden，scoll，auto<h4 id="行内元素的盒模型"><a href="#行内元素的盒模型" class="headerlink" title="行内元素的盒模型"></a>行内元素的盒模型</h4>行内元素垂直边距不推挤，宽高不影响<br>display：inline（行内元素），block（块元素），inline-block（设置宽高，不独占一行），table（表格），none（不在页面中显示）<br>visibilty：visiable，hidden<h3 id="默认样式"><a href="#默认样式" class="headerlink" title="默认样式"></a>默认样式</h3>重置样式表<h2 id="盒子样式"><a href="#盒子样式" class="headerlink" title="盒子样式"></a>盒子样式</h2><h3 id="box-sizing属性"><a href="#box-sizing属性" class="headerlink" title="box-sizing属性"></a>box-sizing属性</h3>设置box-sizing属性height和width改变盒子大小变化方式</li>
<li>content-box默认值，高宽设置内容区</li>
<li>border-box 高宽设置为整个盒子大小<h3 id="轮廓阴影和圆角"><a href="#轮廓阴影和圆角" class="headerlink" title="轮廓阴影和圆角"></a>轮廓阴影和圆角</h3></li>
<li>outline：设置轮廓，相对于不会挤元素的边框</li>
<li>box-shadow：设置元素阴影效果<ul>
<li>偏移量x</li>
<li>偏移量y</li>
<li>模糊效果（也用px）</li>
<li>color（一般会用rgba设置透明）</li>
</ul>
</li>
<li>border-（top）-（left）-radius：设置圆角<ul>
<li>如果指定两个值为椭圆弧<h3 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h3></li>
</ul>
</li>
<li>float特点<br>  元素设置浮动以后会完全从文档中脱离<ul>
<li>设置浮动以后，元素会向父元素中可占据的最左或最右移动</li>
<li>浮动元素默认不会从父元素中溢出</li>
<li>浮动元素向左或向右时，发生碰撞会停止</li>
<li>浮动元素不会盖住文字，可以设置文字环绕图片效果</li>
</ul>
</li>
<li>脱离文档流<ul>
<li>块元素宽高会被内容撑开</li>
<li>行内元素变成块元素</li>
</ul>
</li>
<li>float值<ul>
<li>none，默认值</li>
<li>left    </li>
<li>right<h3 id="高度塌陷和BFC"><a href="#高度塌陷和BFC" class="headerlink" title="高度塌陷和BFC"></a>高度塌陷和BFC</h3>BFC块级格式化区域</li>
</ul>
</li>
</ul>
<ol>
<li>开启BFC的元素不会被浮动元素所覆盖</li>
<li>开启BFC子元素和父元素外边距不会重叠</li>
<li>开启BFC的元素可以包含浮动的子元素<h4 id="开启BFC"><a href="#开启BFC" class="headerlink" title="开启BFC"></a>开启BFC</h4></li>
</ol>
<ul>
<li>设置元素浮动</li>
<li>将元素设置为行内块元素</li>
<li>将元素的overflow设置为非visible（副作用小，hidden和auto）<h4 id="clear属性"><a href="#clear属性" class="headerlink" title="clear属性"></a>clear属性</h4></li>
<li>清除浮动元素对当前元素的影响<br>属性值</li>
</ul>
<ol>
<li>left</li>
<li>right</li>
<li>both（清除最大）<br>原理</li>
</ol>
<ul>
<li>设置浮动以后，浏览器自动为其添加一个外边距<h4 id="使用clear解决塌陷问题"><a href="#使用clear解决塌陷问题" class="headerlink" title="使用clear解决塌陷问题"></a>使用clear解决塌陷问题</h4>：：after{<br>  content：’’;<br>  display：block;<br>  clear:both;<h4 id="解决外边距折叠"><a href="#解决外边距折叠" class="headerlink" title="解决外边距折叠"></a>解决外边距折叠</h4>：：before{<br>  content：’’;<br>  display:table;<br>}<h4 id="clearfix"><a href="#clearfix" class="headerlink" title="clearfix"></a>clearfix</h4>.clearfix::before , .clearfix::after{<br>  content:’’;<br>  display:table;<br>  clear:both;<br>}<h2 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h2><h3 id="position"><a href="#position" class="headerlink" title="position"></a>position</h3>可选值</li>
<li>static 默认值，没开启定位</li>
<li>relative 开启相对定位</li>
<li>absolute 开启绝对定位</li>
<li>fixed 固定定位</li>
<li>sticky 开启粘滞定位<h3 id="相对定位"><a href="#相对定位" class="headerlink" title="相对定位"></a>相对定位</h3>相对定位不会脱离文档流</li>
</ul>
<h4 id="偏移量"><a href="#偏移量" class="headerlink" title="偏移量"></a>偏移量</h4><ul>
<li>top</li>
<li>bottom</li>
<li>right</li>
<li>left<h3 id="绝对定位"><a href="#绝对定位" class="headerlink" title="绝对定位"></a>绝对定位</h3></li>
<li>会从文档流中脱离</li>
<li>会改变元素性质，行内变成块</li>
<li>相对于包含块进行定位<h4 id="包含块"><a href="#包含块" class="headerlink" title="包含块"></a>包含块</h4></li>
<li>正常情况下<ul>
<li>包含块是离当前元素最近的祖先块元素    </li>
</ul>
</li>
<li>开启定位<ul>
<li>只要开启定位，最近为包含块</li>
<li>都没开启就是根元素<h3 id="固定定位"><a href="#固定定位" class="headerlink" title="固定定位"></a>固定定位</h3>属于绝对定位<br>永远参照视口<h3 id="粘滞定位"><a href="#粘滞定位" class="headerlink" title="粘滞定位"></a>粘滞定位</h3><h3 id="层级"><a href="#层级" class="headerlink" title="层级"></a>层级</h3>对于开启定位的元素，可以通过z-index属性指定元素层级</li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu查看硬件信息</title>
    <url>/2022/02/10/Ubuntu%E6%9F%A5%E7%9C%8B%E7%A1%AC%E4%BB%B6%E4%BF%A1%E6%81%AF/</url>
    <content><![CDATA[<p><strong>新买的两个4g内存条到了，试一试ok不ok</strong></p>
<span id="more"></span>
<p>参考博客：<a href="https://blog.csdn.net/chuanyu/article/details/46611793">https://blog.csdn.net/chuanyu/article/details/46611793</a><br>总命令： lshw</p>
<h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><pre><code># uname -a               # 查看内核/操作系统/CPU信息
# head -n 1 /etc/issue   # 查看操作系统版本 
# cat /proc/cpuinfo      # 查看CPU信息
# hostname               # 查看计算机名 
# lspci -tv              # 列出所有PCI设备
# lsusb -tv              # 列出所有USB设备 
# lsmod                  # 列出加载的内核模块
# env                    # 查看环境变量
</code></pre>
<h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><pre><code># free -m                # 查看内存使用量和交换区使用量 
# df -h                  # 查看各分区使用情况 
# du -sh &lt;目录名&gt;        # 查看指定目录的大小 
# grep MemTotal /proc/meminfo   # 查看内存总量
# grep MemFree /proc/meminfo    # 查看空闲内存量
# uptime                 # 查看系统运行时间、用户数、负载 
# cat /proc/loadavg      # 查看系统负载
</code></pre>
<h2 id="磁盘和分区"><a href="#磁盘和分区" class="headerlink" title="磁盘和分区"></a>磁盘和分区</h2><pre><code># mount | column -t      # 查看挂接的分区状态 
# fdisk -l               # 查看所有分区 
# swapon -s              # 查看所有交换分区
# hdparm -i /dev/hda     # 查看磁盘参数(仅适用于IDE设备) 
# dmesg | grep IDE       # 查看启动时IDE设备检测状况
</code></pre>
<h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><pre><code># ifconfig               # 查看所有网络接口的属性
# iptables -L            # 查看防火墙设置 
# route -n               # 查看路由表 
# netstat -lntp          # 查看所有监听端口 
# netstat -antp          # 查看所有已经建立的连接
# netstat -s             # 查看网络统计信息
</code></pre>
<h2 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h2><pre><code># ps -ef                 # 查看所有进程 
# top                    # 实时显示进程状态
</code></pre>
<h2 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h2><pre><code># w                      # 查看活动用户 
# id &lt;用户名&gt;            # 查看指定用户信息 
# last                   # 查看用户登录日志 
# cut -d: -f1 /etc/passwd   # 查看系统所有用户 
# cut -d: -f1 /etc/group    # 查看系统所有组 
# crontab -l             # 查看当前用户的计划任务
</code></pre>
<h2 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h2><pre><code># chkconfig --list       # 列出所有系统服务 
# chkconfig --list | grep on    # 列出所有启动的系统服务
</code></pre>
<h2 id="程序"><a href="#程序" class="headerlink" title="程序"></a>程序</h2><pre><code># rpm -qa                # 查看所有安装的软件包
</code></pre>
<h2 id="常用命令整理如下："><a href="#常用命令整理如下：" class="headerlink" title="常用命令整理如下："></a>常用命令整理如下：</h2><pre><code>查看主板的序列号: dmidecode | grep -i ’serial number’

用硬件检测程序kuduz探测新硬件：service kudzu start ( or restart)

查看CPU信息：cat /proc/cpuinfo [dmesg | grep -i &#39;cpu&#39;][dmidecode -t processor]

查看内存信息：cat /proc/meminfo [free -m][vmstat]

查看板卡信息：cat /proc/pci

查看显卡/声卡信息：lspci |grep -i ‘VGA’[dmesg | grep -i &#39;VGA&#39;]

查看网卡信息：dmesg | grep -i ‘eth’[cat /etc/sysconfig/hwconf | grep -i eth][lspci | grep -i &#39;eth&#39;]
查看PCI信息：lspci (相比cat /proc/pci更直观）

查看USB设备：cat /proc/bus/usb/devices

查看键盘和鼠标:cat /proc/bus/input/devices

查看系统硬盘信息和使用情况：fdisk &amp; disk – l &amp; df

查看各设备的中断请求(IRQ):cat /proc/interrupts

查看系统体系结构：uname -a

查看及启动系统的32位或64位内核模式：isalist –v [isainfo –v][isainfo –b]

dmidecode查看硬件信息，包括bios、cpu、内存等信息

测定当前的显示器刷新频率：/usr/sbin/ffbconfig –rev \?

查看系统配置：/usr/platform/sun4u/sbin/prtdiag –v

查看当前系统中已经应用的补丁：showrev –p

显示当前的运行级别：who –rH

查看当前的bind版本信息：nslookup –class=chaos –q=txt version.bind

dmesg | more 查看硬件信息
lspci 显示外设信息, 如usb，网卡等信息
lsnod 查看已加载的驱动
lshw
psrinfo -v 查看当前处理器的类型和速度（主频）
prtconf -v 打印当前的OBP版本号
iostat –E 查看硬盘物理信息(vendor, RPM, Capacity)
prtvtoc /dev/rdsk/c0t0d0s 查看磁盘的几何参数和分区信息
df –F ufs –o i 显示已经使用和未使用的i-node数目
isalist –v

对于“/proc”中文件可使用文件查看命令浏览其内容，文件中包含系统特定信息：
Cpuinfo 主机CPU信息
Dma 主机DMA通道信息
Filesystems 文件系统信息
Interrupts 主机中断信息
Ioprots 主机I/O端口号信息
Meninfo 主机内存信息
Version Linux内存版本信息

备注： proc – process information pseudo-filesystem 进程信息伪装文件系统

RPM

    在Linux 操作系统中，有一个系统软件包，它的功能类似于Windows里面的“添加/删除程序”，但是功能又比“添加/删除程序”强很多，它就是 Red Hat Package Manager(简称RPM)。此工具包最先是由Red Hat公司推出的，后来被其他Linux开发商所借用。由于它为Linux使用者省去了很多时间，所以被广泛应用于在Linux下安装、删除软件。下面就 给大家介绍一下它的具体使用方法。

1.我们得到一个新软件，在安装之前，一般都要先查看一下这个软件包里有什么内容，假设这个文件是：Linux-1.4-6.i368.rpm，我们可以用这条命令查看：

rpm -qpi Linux-1.4-6.i368.rpm

系统将会列出这个软件包的详细资料，包括含有多少个文件、各文件名称、文件大小、创建时间、编译日期等信息。

2.上面列出的所有文件在安装时不一定全部安装，就像Windows下程序的安装方式分为典型、完全、自定义一样，Linux也会让你选择安装方式，此时我们可以用下面这条命令查看软件包将会在系统里安装哪些部分，以方便我们的选择：

rpm -qpl Linux-1.4-6.i368.rpm

3. 选择安装方式后，开始安装。我们可以用rpm-ivh Linux-1.4-6.i368.rpm命令安装此软件。在安装过程中，若系统提示此软件已安装过或因其他原因无法继续安装，但若我们确实想执行安装命 令，可以在 -ivh后加一参数“-replacepkgs”：

rpm -ivh -replacepkgs Linux-1.4-6.i368.rpm

4.有时我们卸载某个安装过的软件，只需执行rpm-e &lt;文件名&gt;;命令即可。

5.对低版本软件进行升级是提高其功能的好办法，这样可以省去我们卸载后再安装新软件的麻烦，要升级某个软件，只须执行如下命令：rpm -uvh &lt;文件名&gt;;，注意：此时的文件名必须是要升级软件的升级补丁

6. 另外一个安装软件的方法可谓是Linux的独到之处，同时也是RMP强大功能的一个表现：通过FTP站点直接在线安装软件。当找到含有你所需软件的站点并 与此网站连接后，执行下面的命令即可实现在线安装，譬如在线安装Linux-1.4-6.i368.rpm，可以用命令： www.it165.net

rpm -i ftp://ftp.pht.com/pub/linux/redhat/...-1.4-6.i368.rpm

7. 在我们使用电脑过程中，难免会有误操作，若我们误删了几个文件而影响了系统的性能时，怎样查找到底少了哪些文件呢?RPM软件包提供了一个查找损坏文件的 功能，执行此命令：rpm -Va即可，Linux将为你列出所有损坏的文件。你可以通过Linux的安装光盘进行修复。

8.Linux系统中文件繁多，在使用过程中，难免会碰到我们不认识的文件，在Windows下我们可以用“开始/查找”菜单快速判断某个文件属于哪个文件夹，在Linux中，下面这条命令行可以帮助我们快速判定某个文件属于哪个软件包：

rpm -qf &lt;文件名&gt;;

9.当每个软件包安装在Linux系统后，安装文件都会到RPM数据库中“报到”，所以，我们要查询某个已安装软件的属性时，只需到此数据库中查找即可。注意：此时的查询命令不同于1和8介绍的查询，这种方法只适用于已安装过的软件包！命令格式：

rpm -参数　&lt;文件名&gt;;
</code></pre>
<h2 id="APT-GET"><a href="#APT-GET" class="headerlink" title="APT-GET"></a>APT-GET</h2><pre><code>apt-get update——在修改/etc/apt/sources.list或者/etc/apt/preferences之后运行该命令。此外您需要定期运行这一命令以确保您的软件包列表是最新的。
apt-get install packagename——安装一个新软件包（参见下文的aptitude） 
apt-get remove packagename——卸载一个已安装的软件包（保留配置文件） 
apt-get --purge remove packagename——卸载一个已安装的软件包（删除配置文件） 
dpkg --force-all --purge packagename 有些软件很难卸载，而且还阻止了别的软件的应用，就可以用这个，不过有点冒险。 
apt-get autoclean apt会把已装或已卸的软件都备份在硬盘上，所以如果需要空间的话，可以让这个命令来删除你已经删掉的软件 
apt-get clean 这个命令会把安装的软件的备份也删除，不过这样不会影响软件的使用的。 
apt-get upgrade——更新所有已安装的软件包 
apt-get dist-upgrade——将系统升级到新版本 
apt-cache search string——在软件包列表中搜索字符串 
dpkg -l package-name-pattern——列出所有与模式相匹配的软件包。如果您不知道软件包的全名，您可以使用“*package-name-pattern*”。
aptitude——详细查看已安装或可用的软件包。与apt-get类似，aptitude可以通过命令行方式调用，但仅限于某些命令——最常见的有安装和卸载命令。由于aptitude比apt-get了解更多信息，可以说它更适合用来进行安装和卸载。
apt-cache showpkg pkgs——显示软件包信息。 
apt-cache dumpavail——打印可用软件包列表。 
apt-cache show pkgs——显示软件包记录，类似于dpkg –print-avail。 
apt-cache pkgnames——打印软件包列表中所有软件包的名称。 
dpkg -S file——这个文件属于哪个已安装软件包。 
dpkg -L package——列出软件包中的所有文件。 
apt-file search filename——查找包含特定文件的软件包（不一定是已安装的），这些文件的文件名中含有指定的字符串。apt-file是一个独立的软件包。您必须 先使用apt-get install来安装它，然后运行apt-file update。如果apt-file search filename输出的内容太多，您可以尝试使用apt-file search filename | grep -w filename（只显示指定字符串作为完整的单词出现在其中的那些文件名）或者类似方法，例如：apt-file search filename | grep /bin/（只显示位于诸如/bin或/usr/bin这些文件夹中的文件，如果您要查找的是某个特定的执行文件的话，这样做是有帮助的）。
</code></pre>
<h2 id="ubuntu查看版本命令"><a href="#ubuntu查看版本命令" class="headerlink" title="ubuntu查看版本命令"></a>ubuntu查看版本命令</h2><pre><code>方法一：
在终端中执行下列指令： cat /etc/issue
方法二：
使用 lsb_release 命令也可以查看 Ubuntu 的版本号，与方法一相比，内容更为详细。
执行指令如下： sudo lsb_release -a
方法三：
打开“系统监视器”，选择“系统”
Ubuntu查看版本命令
1. lshw
lshw命令显示详细硬件信息。
如果要用概要方式显示，可以加上short参数：lshw-short
要显示指定硬件信息，加上class(或C)参数：lshw -classmemory
2. sysstat
监测系统性能及效率的一组工具，这些工具对于我们收集系统性能数据，
比如CPU使用率、硬盘和网络吞吐数据。
3. lspci -v (相比cat/proc/pci更直观）
查看PCI信息，lspci 是读取 hwdata 数据库。
4. uname -a
查看系统体系结构。
5. dmidecode
查看硬件信息，包括bios、cpu、内存等信息
6. dmesg
显示内核缓冲区系统控制信息，如系统启动时的信息会写到/var/log/。
注：dmesg 工具并不是专门用来查看硬件芯片组标识的工具，
但通过这个工具能让我们知道机器中的硬件的一些参数；因为系统在启动的时候，
会写一些硬件相关的日志到 /var/log/message* 或/var/log/boot* 文件中。
7. lshal 和hal-device-manager
8. 查看 /proc
对于“/proc”中文件可使用文件查看命令浏览其内容，文件中包含系统特定信息：
Cpuinfo 主机CPU信息
Dma 主机DMA通道信息
Filesystems 文件系统信息
Interrupts 主机中断信息
Ioprots 主机I/O端口号信息
Meninfo 主机内存信息
Version Linux内存版本信息
查看CPU信息：cat /proc/cpuinfo 查看板卡信息：cat /proc/pci 查看内存信息：cat/proc/meminfo 查看USB设备：cat /proc/bus/usb/devices 查看键盘和鼠标：cat/proc/bus/input/devices 查看各设备的中断请求(IRQ)：cat/proc/interrupts
</code></pre>
<h2 id="主板信息"><a href="#主板信息" class="headerlink" title="主板信息:"></a>主板信息:</h2><pre><code>sudo demidecode | grep -i ‘serial number’
</code></pre>
<h2 id="CPU信息"><a href="#CPU信息" class="headerlink" title="CPU信息:"></a>CPU信息:</h2><pre><code>cat /proc/cpuinfo
dmesg | grep -i ‘cpu’
sudo dmidecode -t processor
</code></pre>
<h2 id="硬盘信息"><a href="#硬盘信息" class="headerlink" title="硬盘信息:"></a>硬盘信息:</h2><pre><code>查看分区情况:
sudo fdisk -l

查看大小情况:
df -h

查看使用情况:
du -h
sudo hdparm -I /dev/sda
dmesg | grep sda
</code></pre>
<h2 id="内存信息"><a href="#内存信息" class="headerlink" title="内存信息:"></a>内存信息:</h2><pre><code>cat /proc/meminfo
dmesg | grep mem
free -m
vmstat
sudo dmidecode | grep -i mem
</code></pre>
<h2 id="网卡信息"><a href="#网卡信息" class="headerlink" title="网卡信息:"></a>网卡信息:</h2><pre><code>dmesg | grep -i ‘eth’
lspci | grep -i ‘eth’

ethtool -i eht0
ethhool -k eth0
ethtool -g eth0
</code></pre>
<h2 id="查看鼠标和键盘"><a href="#查看鼠标和键盘" class="headerlink" title="查看鼠标和键盘:"></a>查看鼠标和键盘:</h2><pre><code>cat /proc/bus/input/devices
</code></pre>
<h2 id="查看各设备的中断请求-IRQ"><a href="#查看各设备的中断请求-IRQ" class="headerlink" title="查看各设备的中断请求(IRQ):"></a>查看各设备的中断请求(IRQ):</h2><pre><code>cat /proc/interrupts
</code></pre>
<h2 id="显卡信息"><a href="#显卡信息" class="headerlink" title="显卡信息:"></a>显卡信息:</h2><pre><code>lspci | grep -i ‘VGA’
dmesg | grep -i ‘VGA’
</code></pre>
<h2 id="声卡信息"><a href="#声卡信息" class="headerlink" title="声卡信息:"></a>声卡信息:</h2><pre><code>查看声卡型号:
lspci | grep -i audio

查看型号ac97的声卡驱动模块:
modprobe -l | grep ac97

查看声卡信息:
cat /proc/asound/cards

查看alsa-utils本:
alsactl -v

查看内核alsa版本:
cat /proc/asound/version

声卡信息:
aplay -l

硬件信息之声卡:
sudo lshw -C sound

模块状态之声音:
lsmod | grep -i snd

alsa音频配置:
alsamixer
</code></pre>
<h2 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令:"></a>其他命令:</h2><pre><code>dmesg
lspci
mpstat(先安装sysstat: sudo spt-get install sysstat) 
</code></pre>
]]></content>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>改造后的银河铁道之夜</title>
    <url>/2022/02/09/%E6%94%B9%E9%80%A0%E5%90%8E%E7%9A%84%E9%93%B6%E6%B2%B3%E9%93%81%E9%81%93%E4%B9%8B%E5%A4%9C/</url>
    <content><![CDATA[]]></content>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>python爬虫学习</title>
    <url>/2022/02/26/python%E7%88%AC%E8%99%AB%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p><strong>开始学习爬虫了</strong></p>
<span id="more"></span>
]]></content>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>java安装以及配置环境</title>
    <url>/2022/03/01/java%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<p>安装一下Java</p>
<span id="more"></span>
<h2 id="版本选择"><a href="#版本选择" class="headerlink" title="版本选择"></a>版本选择</h2><p>Java有许多版本，我在下载前也是纠结了好久，将自己查找的一些信息罗列如下</p>
<h3 id="英文简称"><a href="#英文简称" class="headerlink" title="英文简称"></a>英文简称</h3><p>LTS：长期支持版，稳定<br>非LTS：实验版，新功能多</p>
<p>SE：Java Platform Standard Edition，Java 平台标准版<br>EE：Java Platform Enterprise Edition，Java 平台企业版<br>ME：Java Platform Micro Edition，Java 平台微型版</p>
<p>JRE：(Java Runtime Enviroment)是Java的运行环境，用来运行java程序<br>JDK：(Java Development Kit)又称J2SDK(Java2 Software Development Kit)，是Java开发工具包，包含了JRE<br>详见：<a href="https://www.php.cn/java/guide/449867.html">《jdk和jre的区别》</a></p>
<h3 id="版本新旧问题"><a href="#版本新旧问题" class="headerlink" title="版本新旧问题"></a>版本新旧问题</h3><p>b站上的网课以及翁恺老师的java网课都使用了Java8版本。并且看知乎的一个回答，感觉JAVA8在目前生产环境中最常用。但是，自我感觉如果是学习用途的话，还是乐意去接受新版本，即使出了问题能学到一些新特性，所以选择安装了最新版的Java 17 LTS SE JDK版本</p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>官网地址 ：<br><a href="https://www.oracle.com/java/technologies/downloads/">https://www.oracle.com/java/technologies/downloads/</a></p>
<h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><p>参考b站视频：<br><a href="https://www.oracle.com/java/technologies/downloads/">win10下(Java环境)JDK环境变量配置</a><br>视频中的一个路径：;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar</p>
]]></content>
      <tags>
        <tag>debug日志</tag>
      </tags>
  </entry>
  <entry>
    <title>java笔记</title>
    <url>/2022/02/28/java%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>学习Java</p>
<span id="more"></span>
<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><h3 id="单行注释"><a href="#单行注释" class="headerlink" title="单行注释"></a>单行注释</h3><p>//</p>
<h3 id="多行注释"><a href="#多行注释" class="headerlink" title="多行注释"></a>多行注释</h3><p>/*<br>*/</p>
<h3 id="文档注释"><a href="#文档注释" class="headerlink" title="文档注释"></a>文档注释</h3><p>/**<br>*/<br>文档注释可以通过 Javadoc 命令把文档注释中的内容生成文档，并输出到 HTML 文件中，方便记录程序信息。还可以包含一个或多个 @ 标签，每个 @ 标签都在新的一行开始</p>
<h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>数据类型——&gt;定义了内存的编码格式</p>
<p>布尔：boolean（c为bool）—Java中布尔值和整型值之间不能互相转换</p>
<p>文本：char（使用16位的unincode）</p>
<p>字符串：String（不是基本数据类型，是类）<br>StringBuild(可修改的字符)<br>StringBuffer（执行效率低，线程安全）</p>
<pre><code>String greeting = new String（&quot;good morning)；构造方法
调用，greeting.charAt(4)
</code></pre>
<h3 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h3><ul>
<li>十进制</li>
<li>十六进制</li>
<li>八进制<h3 id="浮点类型"><a href="#浮点类型" class="headerlink" title="浮点类型"></a>浮点类型</h3></li>
<li>浮点类型默认为Double类型<h4 id="NaN"><a href="#NaN" class="headerlink" title="NaN"></a>NaN</h4></li>
</ul>
<p><strong>全称：not a number</strong></p>
<p>NAN是无序的，不能跟所有的数进行大小比较（加减乘除等）</p>
<h3 id="复合数据类型"><a href="#复合数据类型" class="headerlink" title="复合数据类型"></a>复合数据类型</h3><h4 id="类的初步概念"><a href="#类的初步概念" class="headerlink" title="类的初步概念"></a>类的初步概念</h4><p>日期类型的两种不同定义的方式：<br>方法1：<br>int day，month, year;<br>int d1,m1,y1;<br>int d2, m2,y2;<br>方法2：<br>class Date{<br>    int day;<br>    int month;<br>    int year;<br>    void setDate(int a ,int b, int c);<br>}</p>
<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><h3 id="变量的分类"><a href="#变量的分类" class="headerlink" title="变量的分类"></a>变量的分类</h3><p>语言机制：</p>
<ol>
<li>基本类型</li>
<li>引用类型（受限的指针）<br>作用域：</li>
<li>成员变量（定义在类的内部）</li>
<li>局部变量</li>
<li>方法参数</li>
<li>catch语句块入口参数（异常处理参数）<h2 id="赋值"><a href="#赋值" class="headerlink" title="赋值"></a>赋值</h2>引用变量a，b<br>a = b 只是把b的地址赋给a</li>
</ol>
]]></content>
      <tags>
        <tag>学习笔记</tag>
      </tags>
  </entry>
</search>
